{"version":3,"sources":["../../src/components/collapse/Collapse.jsx","../node_modules/react-intl/lib/src/components/message.js","../node_modules/react-intl/lib/src/components/useIntl.js","Assets/images/how-to-use.jpg","Assets/images/combined-shape.svg","Pages/how-to-use.jsx"],"names":["nextFrame","callback","requestAnimationFrame","children","transition","style","render","elementType","isOpen","collapseHeight","onInit","onChange","className","addState","noAnim","overflowOnExpanded","rest","getCollapsedVisibility","useReducer","_","forceUpdate","elementRef","useRef","useState","callbackTick","setCallbackTick","state","collapse","height","visibility","current","useEffect","onCallback","params","name","setCollapsed","setTimeout","Date","now","setExpanded","getElementHeight","scrollHeight","didOpen","setCollapsing","computedStyle","overflow","ElementType","callbackRef","useCallback","node","collapseClassName","React","ref","onTransitionEnd","target","propertyName","styleHeight","FormattedMessage","props","intl","Context","invariantIntlContext","useIntl","formatMessage","_a","textComponent","Text","id","description","defaultMessage","values","_b","tagName","Component","nodes","ignoreTag","Array","isArray","toArray","displayName","MemoizedFormattedMessage","prevProps","nextProps","otherProps","__rest","nextValues","nextOtherProps","shallowEqual","HowToUse","toggle","index","setState","prevState","isOpen1","tabPanel","searched","filter","page","window","scrollTo","MainSection","Container","HowToMain","HowtoRow","Howtoleft","Howtoright","to","HUbottombuttons","onClick","history","push","href","FlexDiv","styled","div","Media","sm","xs","lg","md","withRouter"],"mappings":"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","file":"static/js/40.24c1f823.chunk.js","sourcesContent":["/* eslint-env browser */\r\n\r\n/**\r\n * All debug logs are removed on build\r\n */\r\n\r\nimport \"./collapse.css\";\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useCallback,\r\n  useReducer\r\n} from \"react\";\r\nimport debugLog from \"./debugLog\";\r\n\r\n// using let instead of const,\r\n// experimenting with ES2015 bundle which gets a bit smaller when using let over const.\r\nlet COLLAPSED = \"collapsed\";\r\nlet COLLAPSING = \"collapsing\";\r\nlet EXPANDING = \"expanding\";\r\nlet EXPANDED = \"expanded\";\r\n\r\nlet defaultClassName = \"collapse-css-transition\";\r\nlet defaultElementType = \"div\";\r\nlet defaultCollapseHeight = \"0px\";\r\n\r\n/**\r\n *\r\n * @param {function} callback\r\n */\r\nfunction nextFrame(callback) {\r\n  requestAnimationFrame(function() {\r\n    //setTimeout(callback, 0); // NOT used because can be jumpy if click-spamming.\r\n    requestAnimationFrame(callback); // This is used.\r\n  });\r\n}\r\n\r\nfunction Collapse({\r\n  children,\r\n  transition,\r\n  style,\r\n  render,\r\n  elementType = defaultElementType,\r\n  isOpen,\r\n  collapseHeight = defaultCollapseHeight,\r\n  onInit,\r\n  onChange,\r\n  className = defaultClassName,\r\n  addState,\r\n  noAnim,\r\n  overflowOnExpanded,\r\n  ...rest\r\n}) {\r\n  let getCollapsedVisibility = () => (collapseHeight === \"0px\" ? \"hidden\" : \"\");\r\n\r\n  let [__, forceUpdate] = useReducer(_ => _ + 1, 0);\r\n\r\n  let elementRef = useRef();\r\n  let [callbackTick, setCallbackTick] = useState(0);\r\n\r\n  // Avoiding setState to control when stuff are updated.\r\n  // Might not be needed.\r\n  let state = useRef({\r\n    collapse: isOpen ? EXPANDED : COLLAPSED,\r\n    style: {\r\n      height: isOpen ? \"\" : collapseHeight,\r\n      visibility: isOpen ? \"\" : getCollapsedVisibility()\r\n    }\r\n  }).current;\r\n\r\n  useEffect(() => {\r\n    // Invoke callback when data are updated, use Effect to sync state.\r\n    callbackTick && onCallback(onChange);\r\n  }, [callbackTick]);\r\n\r\n  /**\r\n   *\r\n   * @param {function} callback\r\n   */\r\n  let onCallback = (callback, params = {}) => {\r\n    if (callback) {\r\n      debugLog(\"onCallback \" + callback.name);\r\n      callback({ state: state.collapse, style: state.style, ...params });\r\n    }\r\n  };\r\n\r\n  function setCollapsed() {\r\n    if (!elementRef.current) return; // might be redundant\r\n\r\n    // Update state\r\n    state.collapse = COLLAPSED;\r\n\r\n    debugLog(\"setCollapsed\");\r\n\r\n    state.style = {\r\n      height: collapseHeight,\r\n      visibility: getCollapsedVisibility()\r\n    };\r\n    forceUpdate();\r\n\r\n    setTimeout(() => setCallbackTick(Date.now), 0); // callback and re-render\r\n  }\r\n\r\n  function setCollapsing() {\r\n    if (!elementRef.current) return; // might be redundant\r\n\r\n    if (noAnim) {\r\n      return setCollapsed();\r\n    }\r\n\r\n    // Update state\r\n    state.collapse = COLLAPSING;\r\n\r\n    debugLog(\"setCollapsing\");\r\n\r\n    state.style = {\r\n      height: getElementHeight(),\r\n      visibility: \"\"\r\n    };\r\n    forceUpdate();\r\n\r\n    nextFrame(() => {\r\n      if (!elementRef.current) return;\r\n      if (state.collapse !== COLLAPSING) return;\r\n\r\n      state.style = {\r\n        height: collapseHeight,\r\n        visibility: \"\"\r\n      };\r\n      //forceUpdate();\r\n\r\n      setCallbackTick(Date.now); // callback and re-render\r\n    });\r\n  }\r\n\r\n  function setExpanding() {\r\n    if (!elementRef.current) return; // might be redundant\r\n\r\n    if (noAnim) {\r\n      return setExpanded();\r\n    }\r\n\r\n    // Updatetate\r\n    state.collapse = EXPANDING;\r\n\r\n    debugLog(\"setExpanding\");\r\n\r\n    nextFrame(() => {\r\n      if (!elementRef.current) return; // might be redundant\r\n      if (state.collapse !== EXPANDING) return;\r\n\r\n      state.style = {\r\n        height: getElementHeight(),\r\n        visibility: \"\"\r\n      };\r\n      // forceUpdate();\r\n\r\n      setCallbackTick(Date.now); // callback and re-render\r\n    });\r\n  }\r\n\r\n  function setExpanded() {\r\n    if (!elementRef.current) return; // might be redundant\r\n\r\n    // Update state\r\n    state.collapse = EXPANDED;\r\n\r\n    debugLog(\"setExpanded\");\r\n\r\n    state.style = {\r\n      height: \"\",\r\n      visibility: \"\"\r\n    };\r\n    forceUpdate();\r\n\r\n    setTimeout(() => setCallbackTick(Date.now), 0); // callback and re-render\r\n  }\r\n\r\n  function getElementHeight() {\r\n    // @ts-ignore\r\n    return `${elementRef.current.scrollHeight}px`;\r\n  }\r\n\r\n  function onTransitionEnd({ target, propertyName }) {\r\n    if (target === elementRef.current && propertyName === \"height\") {\r\n      let styleHeight = target.style.height;\r\n\r\n      debugLog(\"onTransitionEnd\", state.collapse, propertyName, styleHeight);\r\n\r\n      switch (state.collapse) {\r\n        case EXPANDING:\r\n          if (styleHeight === \"\" || styleHeight === collapseHeight)\r\n            // This is stale, a newer event has happened before this could execute\r\n            console.warn(\r\n              `onTransitionEnd height unexpected ${styleHeight}`,\r\n              \"ignore setExpanded\"\r\n            );\r\n          else setExpanded();\r\n          break;\r\n        case COLLAPSING:\r\n          if (styleHeight === \"\" || styleHeight !== collapseHeight)\r\n            // This is stale, a newer event has happened before this could execute\r\n            console.warn(\r\n              `onTransitionEnd height unexpected ${styleHeight}`,\r\n              \"ignore setCollapsed\"\r\n            );\r\n          else setCollapsed();\r\n          break;\r\n        default:\r\n          console.warn(\"Ignored in onTransitionEnd\", state.collapse);\r\n      }\r\n    }\r\n  }\r\n\r\n  // getDerivedStateFromProps\r\n  let didOpen = state.collapse === EXPANDED || state.collapse === EXPANDING;\r\n\r\n  if (!didOpen && isOpen) setExpanding();\r\n\r\n  if (didOpen && !isOpen) setCollapsing();\r\n  // END getDerivedStateFromProps\r\n\r\n  let overflow =\r\n    state.collapse === EXPANDED && overflowOnExpanded ? \"\" : \"hidden\";\r\n\r\n  let computedStyle = {\r\n    overflow,\r\n    transition,\r\n    ...style,\r\n    ...state.style\r\n  };\r\n  let ElementType = elementType;\r\n\r\n  let callbackRef = useCallback(\r\n    node => {\r\n      if (node) {\r\n        elementRef.current = node;\r\n        onCallback(onInit, { node });\r\n        debugLog(\"callback ref\");\r\n      }\r\n    },\r\n    [elementType]\r\n  );\r\n\r\n  let collapseClassName = addState\r\n    ? `${className} --c-${state.collapse}`\r\n    : className;\r\n\r\n  debugLog(\"Render\");\r\n\r\n  return (\r\n    <ElementType\r\n      ref={callbackRef}\r\n      style={computedStyle}\r\n      onTransitionEnd={onTransitionEnd}\r\n      className={collapseClassName}\r\n      {...rest}\r\n    >\r\n      {typeof children === \"function\"\r\n        ? children(state.collapse)\r\n        : typeof render === \"function\"\r\n        ? render(state.collapse)\r\n        : children}\r\n    </ElementType>\r\n  );\r\n}\r\n\r\nexport default Collapse;\r\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nimport { shallowEqual } from '../utils';\nfunction areEqual(prevProps, nextProps) {\n    var values = prevProps.values, otherProps = __rest(prevProps, [\"values\"]);\n    var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\n    return (shallowEqual(nextValues, values) &&\n        shallowEqual(otherProps, nextOtherProps));\n}\nfunction FormattedMessage(props) {\n    var intl = useIntl();\n    var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\n    var id = props.id, description = props.description, defaultMessage = props.defaultMessage, values = props.values, children = props.children, _b = props.tagName, Component = _b === void 0 ? Text : _b, ignoreTag = props.ignoreTag;\n    var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\n    var nodes = formatMessage(descriptor, values, {\n        ignoreTag: ignoreTag,\n    });\n    if (typeof children === 'function') {\n        return children(Array.isArray(nodes) ? nodes : [nodes]);\n    }\n    if (Component) {\n        return React.createElement(Component, null, React.Children.toArray(nodes));\n    }\n    return React.createElement(React.Fragment, null, nodes);\n}\nFormattedMessage.displayName = 'FormattedMessage';\nvar MemoizedFormattedMessage = React.memo(FormattedMessage, areEqual);\nMemoizedFormattedMessage.displayName = 'MemoizedFormattedMessage';\nexport default MemoizedFormattedMessage;\n","import * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    var intl = React.useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","export default __webpack_public_path__ + \"static/media/how-to-use.7bc9e2bd.jpg\";","export default __webpack_public_path__ + \"static/media/combined-shape.f503f347.svg\";","import \"react-multi-carousel/lib/styles.css\";\nimport \"react-tabs/style/react-tabs.css\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport styled from \"styled-components\";\nimport Gs from \"../Theme/globalStyles\";\nimport { Link } from \"react-router-dom\";\nimport Collapse from \"@kunukn/react-collapse\";\nimport { FormattedMessage } from \"react-intl\";\nimport Media from \"../Theme/media-breackpoint\";\n\nimport NFT2 from \"../Assets/images/how-to-use.jpg\";\nimport Cshape from \"../Assets/images/combined-shape.svg\";\n\nclass HowToUse extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen1: false,\n      tabPanel: \"all\",\n      searched: false,\n      filter: [],\n      page: 1,\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return (\n      <Gs.MainSection>\n        <Gs.Container>\n          {/* <HUtopButtons>\n            <button className=\"active\">For Creators</button>\n            <button>For Collectors</button>\n          </HUtopButtons> */}\n          <HowToMain>\n            <HowtoRow>\n              <Howtoleft>\n                <h3>\n                  <FormattedMessage id=\"how_to_use_lable_01\" />\n                </h3>\n                <p>\n                  <FormattedMessage id=\"how_to_use_text01_1\" />\n                </p>\n                <p>\n                  <FormattedMessage id=\"how_to_use_text01_2\" />\n                </p>\n              </Howtoleft>\n              <Howtoright>\n                <Link to=\"/how-to-use\">\n                  {/* <img src={NFT2} alt=\"\" /> */}\n                  <div className=\"overlay\">\n                    <p>\n                      <FormattedMessage\n                        id=\"comming_soon\"\n                        defaultMessage=\"Coming Soon\"\n                      />\n                    </p>\n                  </div>\n                </Link>\n              </Howtoright>\n            </HowtoRow>\n            <HowtoRow>\n              <Howtoleft>\n                <h3>\n                  <FormattedMessage id=\"how_to_use_lable_02\" />\n                </h3>\n                <p>\n                  <FormattedMessage id=\"how_to_use_text02_1\" />\n                </p>\n                <p>\n                  <FormattedMessage id=\"how_to_use_text02_2\" />\n                </p>\n              </Howtoleft>\n              <Howtoright>\n                <Link to=\"/how-to-use\">\n                  {/* <img src={NFT2} alt=\"\" /> */}\n                  <div className=\"overlay\">\n                    <p>\n                      <FormattedMessage\n                        id=\"comming_soon\"\n                        defaultMessage=\"Coming Soon\"\n                      />\n                    </p>\n                  </div>\n                </Link>\n              </Howtoright>\n            </HowtoRow>\n            <HowtoRow>\n              <Howtoleft>\n                <h3>\n                  <FormattedMessage id=\"how_to_use_lable_03\" />\n                </h3>\n                <p>\n                  <FormattedMessage id=\"how_to_use_text03_1\" />\n                </p>\n                <p>\n                  <FormattedMessage id=\"how_to_use_text03_2\" />\n                </p>\n              </Howtoleft>\n              <Howtoright>\n                <Link to=\"/how-to-use\">\n                  {/* <img src={NFT2} alt=\"\" /> */}\n                  <div className=\"overlay\">\n                    <p>\n                      <FormattedMessage\n                        id=\"comming_soon\"\n                        defaultMessage=\"Coming Soon\"\n                      />\n                    </p>\n                  </div>\n                </Link>\n              </Howtoright>\n            </HowtoRow>\n            <HowtoRow>\n              <Howtoleft>\n                <h3>\n                  <FormattedMessage id=\"how_to_use_lable_04\" />\n                </h3>\n                <p>\n                  <FormattedMessage id=\"how_to_use_text04_1\" />\n                </p>\n                <p>\n                  <FormattedMessage id=\"how_to_use_text04_2\" />\n                </p>\n              </Howtoleft>\n              <Howtoright>\n                <Link to=\"/how-to-use\">\n                  {/* <img src={NFT2} alt=\"\" /> */}\n                  <div className=\"overlay\">\n                    <p>\n                      <FormattedMessage\n                        id=\"comming_soon\"\n                        defaultMessage=\"Coming Soon\"\n                      />\n                    </p>\n                  </div>\n                </Link>\n              </Howtoright>\n            </HowtoRow>\n            <HowtoRow>\n              <Howtoleft>\n                <h3>\n                  <FormattedMessage id=\"how_to_use_lable_05\" />\n                </h3>\n                <p>\n                  <FormattedMessage id=\"how_to_use_text05_1\" />\n                </p>\n                <p>\n                  <FormattedMessage id=\"how_to_use_text05_2\" />\n                </p>\n                <p>\n                  <FormattedMessage id=\"how_to_use_text05_3\" />\n                </p>\n              </Howtoleft>\n              <Howtoright>\n                <Link to=\"/how-to-use\">\n                  {/* <img src={NFT2} alt=\"\" /> */}\n                  <div className=\"overlay\">\n                    <p>\n                      <FormattedMessage\n                        id=\"comming_soon\"\n                        defaultMessage=\"Coming Soon\"\n                      />\n                    </p>\n                  </div>\n                </Link>\n              </Howtoright>\n            </HowtoRow>\n            <HowtoRow>\n              <Howtoleft>\n                <h3>\n                  <FormattedMessage id=\"how_to_use_lable_06\" />\n                </h3>\n                <p>\n                  <FormattedMessage id=\"how_to_use_text06_1\" />\n                </p>\n                <p>\n                  <FormattedMessage id=\"how_to_use_text06_2\" />\n                </p>\n              </Howtoleft>\n              <Howtoright>\n                <Link to=\"/how-to-use\">\n                  {/* <img src={NFT2} alt=\"\" /> */}\n                  <div className=\"overlay\">\n                    <p>\n                      <FormattedMessage\n                        id=\"comming_soon\"\n                        defaultMessage=\"Coming Soon\"\n                      />\n                    </p>\n                  </div>\n                </Link>\n              </Howtoright>\n            </HowtoRow>\n          </HowToMain>\n          <HUbottombuttons>\n            <button onClick={() => this.props.history.push(\"/faq\")}>\n              <FormattedMessage id=\"faq\" defaultMessage=\"FAQ\" />\n            </button>\n            {/* <button>   */}\n            <a href=\"mailto:admin@Fibit.io\">\n              <FormattedMessage id=\"support\" defaultMessage=\"Support\" />\n            </a>\n            {/* </button> */}\n          </HUbottombuttons>\n        </Gs.Container>\n      </Gs.MainSection>\n    );\n  }\n  toggle = (index) => {\n    let collapse = \"isOpen\" + index;\n    this.setState((prevState) => ({ [collapse]: !prevState[collapse] }));\n  };\n}\n// Common Style Div\nconst FlexDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\nconst LoaderBX = styled(FlexDiv)`\n  width: 100%;\n  margin: 50px auto;\n`;\n\nconst HowToMain = styled.div`\n  margin-top: 60px;\n`;\n\nconst HUtopButtons = styled(FlexDiv)`\n  margin: 60px 0px 30px;\n  justify-content: flex-start;\n  button {\n    padding: 10px 60px;\n    background-color: #eef2f7;\n    border-radius: 15px;\n    margin: 0px 10px 10px 0px;\n    font-size: 14px;\n    line-height: 22px;\n    color: #000;\n    letter-spacing: -0.2px;\n    font-weight: 500;\n    :hover,\n    &.active {\n      background-color: #00DBAE;\n      color: #fff;\n    }\n    ${Media.sm} {\n      padding: 10px 40px;\n      margin: 0px 5px 5px 0px;\n      width: calc(50% - 5px);\n    }\n    ${Media.xs} {\n      padding: 10px 30px;\n      margin: 0px 5px 5px 0px;\n    }\n  }\n`;\nconst HUbottombuttons = styled.div`\n  margin: 50px 0px 120px;\n  justify-content: flex-start;\n  button,\n  a {\n    display: block;\n    width: 190px;\n    height: 44px;\n    background-color: transparent;\n    border: 1px solid #000;\n    border-radius: 15px;\n    margin: 0px 0px 10px 0px;\n    font-size: 14px;\n    line-height: 42px;\n    color: #000;\n    letter-spacing: -0.5px;\n    font-weight: 500;\n    text-align: center;\n    :hover {\n      background-color: #00DBAE;\n      border:none;\n      color: #fff;\n    }\n    ${Media.sm} {\n      margin: 0px auto 10px;\n    }\n  }\n  ${Media.sm} {\n    justify-content: center;\n    margin: 0px 0px 100px;\n  }\n`;\n\nconst HowtoRow = styled(FlexDiv)`\n  margin-bottom: 30px;\n`;\nconst Howtoleft = styled.div`\n  max-width: 785px;\n  width: 100%;\n  h3 {\n    font-size: 24px;\n    letter-spacing: -1.07px;\n    font-weight: bold;\n    color: #000;\n    margin: 0px 0px 20px;\n    line-height: normal;\n  }\n  p {\n    font-size: 16px;\n    line-height: 24px;\n    letter-spacing: -0.8px;\n    color: #000;\n    margin: 0px 0px 30px;\n    :last-child {\n      margin: 0px;\n    }\n  }\n  ${Media.lg} {\n    max-width: 680px;\n  }\n  ${Media.md} {\n    max-width: 70%;\n  }\n  ${Media.sm} {\n    max-width: 100%;\n  }\n`;\nconst Howtoright = styled.div`\n  max-width: 255px;\n  max-height: 255px;\n  width: 100%;\n  margin: 0 auto;\n  position: relative;\n  border-radius: 10px;\n  overflow: hidden;\n  ${Media.lg} {\n    max-width: 220px;\n    max-height: 220px;\n  }\n  ${Media.md} {\n    max-width: 25%;\n    max-height: 100%;\n    height: 190px;\n    margin: 0px 0px 0px auto;\n  }\n  ${Media.sm} {\n    max-width: 255px;\n    max-height: 255px;\n    height: auto;\n    margin: 30px auto;\n  }\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n  .overlay {\n    background-color: rgb(0 0 0 / 30%);\n    border-radius: 10px;\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    height: 100%;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    p {\n      font-size: 20px;\n      letter-spacing: -0.75px;\n      font-weight: bold;\n      color: #fff;\n      text-shadow: 0px 2px 5px rgb(0 0 0 / 30%);\n      margin: 0px;\n      position: absolute;\n      top: 20px;\n      left: 20px;\n    }\n  }\n`;\n\nexport default withRouter(HowToUse);\n"],"sourceRoot":""}