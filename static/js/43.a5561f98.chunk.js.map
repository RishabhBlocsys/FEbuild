{"version":3,"sources":["Component/header/notification.jsx"],"names":["Notifications","props","state","this","getNotifications","notifications","lng","NotificationSBX01","Notificationtitle","id","defaultMessage","length","map","notification","onClick","history","push","route","text","en","tu","LoaderBX","src","LoaderGif","alt","Component","FlexDiv","styled","div","Media","md","withRouter","connect","fetchNotifications","fetchLanguage","dispatch","actions"],"mappings":"6PAeMA,E,kDAEJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAMnB,WACEC,KAAKF,MAAMG,qB,oBAGb,WAAU,IAAD,OACP,EAA6BD,KAAKF,MAA5BI,EAAN,EAAMA,cAAeC,EAArB,EAAqBA,IACrB,OACE,mCACGD,EAEC,eAACE,EAAD,WAEE,cAACC,EAAD,UACE,cAAC,IAAD,CAAkBC,GAAG,gBAAgBC,eAAe,oBAErDL,EAAcM,OAAS,EAAIN,EAAcO,KAAI,SAACC,GAC7C,OAAO,yBAELC,QAAS,kBAAM,EAAKb,MAAMc,QAAQC,KAAKH,EAAaI,MAAQJ,EAAaI,MAAQ,MAF5E,UAGI,OAARX,GAAgBO,EAAaK,KAAKC,GAC1B,OAARb,GAAgBO,EAAaK,KAAKE,KAH9BP,EAAaJ,OAMpB,iCACE,cAAC,IAAD,CACEA,GAAG,mBACHC,eAAe,gCAOrB,cAACW,EAAD,UACA,qBAAKC,IAAKC,IAAWC,IAAI,a,GA1CTC,aAkDtBC,EAAUC,IAAOC,IAAV,6GAIPP,EAAWM,YAAOD,EAAPC,CAAH,gEAIRpB,EAAoBoB,YAAOD,EAAPC,CAAH,+oBAgBZE,UAAMC,GAcXD,UAAMC,IAMNtB,EAAoBmB,IAAOC,IAAV,mNAOnBC,UAAMC,IAmBKC,sBAAWC,aAPF,SAAC9B,GACvB,MAAO,CACLG,cAAeH,EAAM+B,mBACrB3B,IAAKJ,EAAMgC,kBATW,SAACC,GACzB,MAAO,CACL/B,iBAAkB,kBAAM+B,EAASC,IAAQhC,wBAWnB4B,CAA4ChC,K","file":"static/js/43.a5561f98.chunk.js","sourcesContent":["import 'react-multi-carousel/lib/styles.css';\r\nimport 'react-tabs/style/react-tabs.css';\r\n\r\nimport React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport { actions } from \"../../actions\";\r\nimport LoaderGif from '../../Assets/images/loading.gif';\r\nimport Media from \"../../Theme/media-breackpoint\";\r\n\r\n\r\n\r\nclass Notifications extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getNotifications() // fetch user notifications\r\n  }\r\n\r\n  render() {\r\n    let { notifications, lng } = this.props;\r\n    return (\r\n      <>\r\n        {notifications ?\r\n\r\n          <NotificationSBX01>\r\n\r\n            <Notificationtitle>\r\n              <FormattedMessage id=\"notifications\" defaultMessage=\"Notifications\" />\r\n            </Notificationtitle>\r\n            {notifications.length > 0 ? notifications.map((notification) => {\r\n              return <button\r\n                key={notification.id}\r\n                onClick={() => this.props.history.push(notification.route ? notification.route : '/')}>\r\n                {lng === 'en' && notification.text.en}\r\n                {lng === 'tr' && notification.text.tu}\r\n              </button>\r\n            }) :\r\n              <button>\r\n                <FormattedMessage\r\n                  id=\"no_notifications\"\r\n                  defaultMessage=\"No Notifications Found\"\r\n                />\r\n              </button>\r\n            }\r\n\r\n          </NotificationSBX01>\r\n\r\n          : <LoaderBX>\r\n            <img src={LoaderGif} alt=\"\" />\r\n          </LoaderBX>}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n// Common Style Div \r\nconst FlexDiv = styled.div`\r\n    display: flex; align-items: center; justify-content:center; flex-wrap:wrap;\r\n`;\r\n\r\nconst LoaderBX = styled(FlexDiv)`\r\n  width:100%;  margin:50px auto;  \r\n`\r\n\r\nconst NotificationSBX01 = styled(FlexDiv)`\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n \r\n  button {\r\n    width: 100%;\r\n    height: auto;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #000;\r\n    display: block;\r\n    text-align: left;\r\n    padding: 15px;\r\n    border-bottom: 1px solid #eef2f7;\r\n    // :last-child\r\n    // {\r\n    //   ${Media.md} {\r\n    //     padding-bottom:40px;\r\n    //   }\r\n    // }\r\n    span {\r\n      font-size: 10px;\r\n      font-weight: 400;\r\n      display: block;\r\n      width: 100%;\r\n      margin-top: 5px;\r\n    }\r\n    :hover {\r\n      background-color: #d9f5f5;\r\n    }\r\n    ${Media.md} {\r\n      padding:20px 35px 20px 25px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Notificationtitle = styled.div`\r\n  font-size:24px;\r\n  color:#000000;\r\n  letter-spacing:-1.07px;\r\n  font-weight:600;\r\n  margin:20px 0px 20px;\r\n  display:none;\r\n  ${Media.md} {\r\n    display:block;\r\n    padding: 0px 25px;\r\n  }\r\n`;\r\n\r\nconst mapDipatchToProps = (dispatch) => {\r\n  return {\r\n    getNotifications: () => dispatch(actions.getNotifications()),\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    notifications: state.fetchNotifications,\r\n    lng: state.fetchLanguage,\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDipatchToProps)(Notifications));"],"sourceRoot":""}