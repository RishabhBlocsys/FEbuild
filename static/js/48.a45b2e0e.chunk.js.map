{"version":3,"sources":["Component/lang.switch.jsx"],"names":["connect","dispatch","setLanguage","lng","actions","props","context","useContext","Context","wrapperRef","useRef","useState","toggle","setToggle","header","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","localStorage","getItem","selectLanguage","onClick","setItem","FlexDiv","styled","div","LanBTN","Media","md","DDContainer","DDBtnbar01","LanBTNF","sm","DDContainerF","DDBtnbar01F","ref","className","id","defaultMessage","isOpen","locale","includes"],"mappings":"4NA2ReA,sBAAQ,MANG,SAACC,GACzB,MAAO,CACLC,YAAa,SAACC,GAAD,OAASF,EAASG,IAAQF,YAAYC,QAIxCH,EAjRE,SAACK,GAChB,IAAMC,EAAUC,qBAAWC,KACrBC,EAAaC,iBAAO,MAC1B,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAST,EAAMS,OAErBC,qBAAU,WAIR,SAASC,EAAmBC,GAExBR,GACAA,EAAWS,UACVT,EAAWS,QAAQC,SAASF,EAAMG,SAE/BR,GAAQC,GAAU,GAM1B,OADAQ,SAASC,iBAAiB,YAAaN,GAChC,WAELK,SAASE,oBAAoB,YAAaP,MAE3C,CAACP,EAAYG,IAChBG,qBAAU,WACR,IAAIZ,EAAMqB,aAAaC,QAAQ,iBAC3BD,aAAaC,QAAQ,iBACrB,KACJnB,EAAQoB,eAAevB,GACvBE,EAAMH,YAAYC,KACjB,IAEH,IAAMwB,EAAU,SAACxB,GACfU,GAAU,SAACD,GAAD,OAAaA,KACvBN,EAAQoB,eAAevB,GACvBqB,aAAaI,QAAQ,gBAAiBzB,GACtCE,EAAMH,YAAYC,IAGd0B,EAAUC,IAAOC,IAAV,gIAOPC,EAASF,YAAOD,EAAPC,CAAH,ugBAQJG,UAAMC,GAKVD,UAAMC,IAaJC,EAAcL,YAAOD,EAAPC,CAAH,8sBA2BbG,UAAMC,IAMJE,EAAaN,YAAOD,EAAPC,CAAH,iWAeVG,UAAMC,IAKNG,EAAUP,YAAOD,EAAPC,CAAH,0OASTG,UAAMK,IAIJC,EAAeT,YAAOD,EAAPC,CAAH,mlBA2BZU,EAAcV,YAAOD,EAAPC,CAAH,kTAkBjB,OACE,mCACGhB,EACC,eAACkB,EAAD,CAAQS,IAAKhC,EAAb,UACE,yBACEiC,UAAU,YACVf,QAAS,WACPd,GAAU,SAACD,GAAD,OAAaA,MAH3B,UAME,cAAC,IAAD,CAAkB+B,GAAG,WAAWC,eAAe,SAC/C,mBAAGF,UAAU,2BAEf,cAAC,IAAD,CACEG,OAAQjC,EACR8B,UACE,2CACC9B,EAAS,kBAAoB,IAJlC,SAOE,cAACuB,EAAD,UACE,eAACC,EAAD,WACE,wBACEM,UAAWpC,EAAQwC,OAAOC,SAAS,MAAQ,SAAW,GACtDpB,QAAS,kBAAMA,EAAQ,OAFzB,iBADF,IAOI,IACF,wBACEe,UAA8B,OAAnBpC,EAAQwC,OAAkB,SAAW,GAChDnB,QAAS,kBAAMA,EAAQ,OAFzB,0BAWR,eAACU,EAAD,CAASI,IAAKhC,EAAd,UACE,yBACEiC,UAAU,YACVf,QAAS,WACPd,GAAU,SAACD,GAAD,OAAaA,MAH3B,UAME,cAAC,IAAD,CAAkB+B,GAAG,WAAWC,eAAe,SAC/C,mBAAGF,UAAU,2BAEf,cAAC,IAAD,CACEG,OAAQjC,EACR8B,UACE,2CACC9B,EAAS,kBAAoB,IAJlC,SAOE,cAAC2B,EAAD,UACE,eAACC,EAAD,WACE,wBACEE,UAAWpC,EAAQwC,OAAOC,SAAS,MAAQ,SAAW,GACtDpB,QAAS,kBAAMA,EAAQ,OAFzB,iBADF,IAOI,IACF,wBACEe,UAA8B,OAAnBpC,EAAQwC,OAAkB,SAAW,GAChDnB,QAAS,kBAAMA,EAAQ,OAFzB","file":"static/js/48.a45b2e0e.chunk.js","sourcesContent":["import React, { useContext, useState, useRef, useEffect } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport styled from \"styled-components\";\r\nimport Collapse from \"@kunukn/react-collapse\";\r\n\r\nimport { Context } from \"./wrapper\";\r\nimport Media from \"../Theme/media-breackpoint\";\r\nimport { connect } from \"react-redux\";\r\nimport { actions } from \"../actions\";\r\n\r\nconst Language = (props) => {\r\n  const context = useContext(Context);\r\n  const wrapperRef = useRef(null);\r\n  const [toggle, setToggle] = useState(false);\r\n  const header = props.header;\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * Alert if clicked on outside of element\r\n     */\r\n    function handleClickOutside(event) {\r\n      if (\r\n        wrapperRef &&\r\n        wrapperRef.current &&\r\n        !wrapperRef.current.contains(event.target)\r\n      ) {\r\n        if (toggle) setToggle(false);\r\n      }\r\n    }\r\n\r\n    // Bind the event listener\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [wrapperRef, toggle]);\r\n  useEffect(() => {\r\n    let lng = localStorage.getItem(\"FibitLanguage\")\r\n      ? localStorage.getItem(\"FibitLanguage\")\r\n      : \"en\";\r\n    context.selectLanguage(lng);\r\n    props.setLanguage(lng);\r\n  }, []);\r\n\r\n  const onClick = (lng) => {\r\n    setToggle((toggle) => !toggle);\r\n    context.selectLanguage(lng);\r\n    localStorage.setItem(\"FibitLanguage\", lng);\r\n    props.setLanguage(lng);\r\n  };\r\n\r\n  const FlexDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n  `;\r\n\r\n  const LanBTN = styled(FlexDiv)`\r\n    margin-left: 30px;\r\n    position: relative;\r\n    button {\r\n      font-size: 12px;\r\n      font-weight: 600;\r\n      color: #000;\r\n      &.Lang-text {\r\n        ${Media.md} {\r\n          display: none;\r\n        }\r\n      }\r\n    }\r\n    ${Media.md} {\r\n      position: absolute;\r\n      right: 60px;\r\n      left: auto;\r\n      top: 0px;\r\n      .app__collapse {\r\n        opacity: 1;\r\n        overflow: visible !important;\r\n        visibility: visible !important;\r\n        height: auto !important;\r\n      }\r\n    }\r\n  `;\r\n  const DDContainer = styled(FlexDiv)`\r\n    position: absolute;\r\n    background-color: #fff;\r\n    padding: 15px;\r\n    border-radius: 20px;\r\n    box-shadow: 0 10px 20px 0 rgba(0, 0, 0, 0.3);\r\n    top: calc(100% + 30px);\r\n    width: 200px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    overflow: hidden;\r\n    z-index: 100;\r\n    &.ver2 {\r\n      width: 300px;\r\n      left: auto;\r\n      transform: translateX(0);\r\n      right: 0;\r\n      top: calc(100% + 20px);\r\n      padding: 0;\r\n    }\r\n    &.ver3 {\r\n      width: 300px;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      top: calc(100% + 34px);\r\n      padding: 0;\r\n    }\r\n    ${Media.md} {\r\n      box-shadow: none;\r\n      width: max-content;\r\n      padding: 0px;\r\n    }\r\n  `;\r\n  const DDBtnbar01 = styled(FlexDiv)`\r\n    font-size: 16px;\r\n    color: #b3b3b3;\r\n    font-weight: 600;\r\n    button {\r\n      font-size: 16px;\r\n      padding: 0 10px;\r\n      margin: 0 6px;\r\n      color: #b3b3b3;\r\n      &.active {\r\n        color: #000;\r\n      }\r\n      :hover {\r\n        color: #000;\r\n      }\r\n      ${Media.md} {\r\n        font-size: 18px;\r\n      }\r\n    }\r\n  `;\r\n  const LanBTNF = styled(FlexDiv)`\r\n    margin-left: 30px;\r\n    position: relative;\r\n    margin-top: 50px;\r\n    button {\r\n      font-size: 12px;\r\n      font-weight: 400;\r\n      color: #fff;\r\n    }\r\n    ${Media.sm} {\r\n      margin-top: 32px;\r\n    }\r\n  `;\r\n  const DDContainerF = styled(FlexDiv)`\r\n    position: absolute;\r\n    background-color: #fff;\r\n    padding: 15px;\r\n    border-radius: 20px;\r\n    box-shadow: 0 10px 20px 0 rgba(0, 0, 0, 0.3);\r\n    bottom: calc(100% + 5px);\r\n    width: 200px;\r\n    right: 0;\r\n    overflow: hidden;\r\n    z-index: 100;\r\n    &.ver2 {\r\n      width: 300px;\r\n      left: auto;\r\n      transform: translateX(0);\r\n      right: 0;\r\n      top: calc(100% + 20px);\r\n      padding: 0;\r\n    }\r\n    &.ver3 {\r\n      width: 300px;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      top: calc(100% + 34px);\r\n      padding: 0;\r\n    }\r\n  `;\r\n  const DDBtnbar01F = styled(FlexDiv)`\r\n    font-size: 16px;\r\n    color: #b3b3b3;\r\n    font-weight: 600;\r\n    button {\r\n      font-size: 16px;\r\n      padding: 0 10px;\r\n      margin: 0 6px;\r\n      color: #b3b3b3;\r\n      &.active {\r\n        color: #000;\r\n      }\r\n      :hover {\r\n        color: #000;\r\n      }\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <>\r\n      {header ? (\r\n        <LanBTN ref={wrapperRef}>\r\n          <button\r\n            className=\"Lang-text\"\r\n            onClick={() => {\r\n              setToggle((toggle) => !toggle);\r\n            }}\r\n          >\r\n            <FormattedMessage id=\"language\" defaultMessage=\"LANG\" />\r\n            <i className=\"fas fa-chevron-down\"></i>\r\n          </button>\r\n          <Collapse\r\n            isOpen={toggle}\r\n            className={\r\n              \"app__collapse collapse-css-transition  \" +\r\n              (toggle ? \"collapse-active\" : \"\")\r\n            }\r\n          >\r\n            <DDContainer>\r\n              <DDBtnbar01>\r\n                <button\r\n                  className={context.locale.includes(\"en\") ? \"active\" : \"\"}\r\n                  onClick={() => onClick(\"en\")}\r\n                >\r\n                  ENG\r\n                </button>\r\n                |{\" \"}\r\n                <button\r\n                  className={context.locale === \"tr\" ? \"active\" : \"\"}\r\n                  onClick={() => onClick(\"tr\")}\r\n                >\r\n                  TU\r\n                </button>\r\n              </DDBtnbar01>\r\n            </DDContainer>\r\n          </Collapse>\r\n        </LanBTN>\r\n      ) : (\r\n        <LanBTNF ref={wrapperRef}>\r\n          <button\r\n            className=\"Lang-text\"\r\n            onClick={() => {\r\n              setToggle((toggle) => !toggle);\r\n            }}\r\n          >\r\n            <FormattedMessage id=\"language\" defaultMessage=\"LANG\" />\r\n            <i className=\"fas fa-chevron-down\"></i>\r\n          </button>\r\n          <Collapse\r\n            isOpen={toggle}\r\n            className={\r\n              \"app__collapse collapse-css-transition  \" +\r\n              (toggle ? \"collapse-active\" : \"\")\r\n            }\r\n          >\r\n            <DDContainerF>\r\n              <DDBtnbar01F>\r\n                <button\r\n                  className={context.locale.includes(\"en\") ? \"active\" : \"\"}\r\n                  onClick={() => onClick(\"en\")}\r\n                >\r\n                  ENG\r\n                </button>\r\n                |{\" \"}\r\n                <button\r\n                  className={context.locale === \"tr\" ? \"active\" : \"\"}\r\n                  onClick={() => onClick(\"tr\")}\r\n                >\r\n                  TU\r\n                </button>\r\n              </DDBtnbar01F>\r\n            </DDContainerF>\r\n          </Collapse>\r\n        </LanBTNF>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDipatchToProps = (dispatch) => {\r\n  return {\r\n    setLanguage: (lng) => dispatch(actions.setLanguage(lng)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDipatchToProps)(Language);\r\n"],"sourceRoot":""}