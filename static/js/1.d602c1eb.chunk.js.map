{"version":3,"sources":["../node_modules/framer-motion/dist/es/motion/features/definitions.js","../node_modules/framer-motion/dist/es/context/LazyContext.js","../node_modules/framer-motion/dist/es/motion/features/use-features.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.js","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.js","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.js","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.js","../node_modules/framer-motion/dist/es/render/utils/variants.js","../node_modules/framer-motion/dist/es/context/MotionContext/create.js","../node_modules/framer-motion/dist/es/context/MotionContext/utils.js","../node_modules/framer-motion/dist/es/motion/index.js","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.js","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.js","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.js","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.js","../node_modules/framer-motion/dist/es/render/dom/projection/scale-correction.js","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.js","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.js","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.js","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.js","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.js","../node_modules/framer-motion/dist/es/render/html/use-props.js","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.js","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.js","../node_modules/framer-motion/dist/es/render/svg/utils/path.js","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.js","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.js","../node_modules/framer-motion/dist/es/render/svg/use-props.js","../node_modules/framer-motion/dist/es/render/dom/use-render.js","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.js","../node_modules/framer-motion/dist/es/render/html/utils/render.js","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.js","../node_modules/framer-motion/dist/es/render/svg/utils/render.js","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.js","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.js","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.js","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.js","../node_modules/framer-motion/dist/es/utils/resolve-value.js","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.js","../node_modules/framer-motion/dist/es/render/svg/config-motion.js","../node_modules/framer-motion/dist/es/render/html/config-motion.js","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.js","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.js","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.js","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.js","../node_modules/framer-motion/dist/es/motion/features/gestures.js","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.js","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.js","../node_modules/framer-motion/dist/es/utils/shallow-compare.js","../node_modules/framer-motion/dist/es/render/dom/value-types/test.js","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.js","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.js","../node_modules/framer-motion/dist/es/render/dom/value-types/find.js","../node_modules/framer-motion/dist/es/render/utils/setters.js","../node_modules/framer-motion/dist/es/render/utils/animation.js","../node_modules/framer-motion/dist/es/render/utils/animation-state.js","../node_modules/framer-motion/dist/es/motion/features/animations.js","../node_modules/framer-motion/dist/es/motion/features/drag.js","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.js","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.js","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.js","../node_modules/framer-motion/dist/es/render/dom/projection/default-scale-correctors.js","../node_modules/framer-motion/dist/es/motion/features/layout/Animate.js","../node_modules/framer-motion/dist/es/motion/features/layout/Measure.js","../node_modules/framer-motion/dist/es/motion/features/layout/index.js","../node_modules/framer-motion/dist/es/render/utils/state.js","../node_modules/framer-motion/dist/es/render/html/utils/build-projection-transform.js","../node_modules/framer-motion/dist/es/render/utils/lifecycles.js","../node_modules/framer-motion/dist/es/render/utils/flat-tree.js","../node_modules/framer-motion/dist/es/render/index.js","../node_modules/framer-motion/dist/es/render/utils/motion-values.js","../node_modules/framer-motion/dist/es/render/dom/projection/relative-set.js","../node_modules/framer-motion/dist/es/render/utils/projection.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.js","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.js","../node_modules/framer-motion/dist/es/render/html/visual-element.js","../node_modules/framer-motion/dist/es/utils/is-numerical-string.js","../node_modules/framer-motion/dist/es/render/svg/visual-element.js","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.js","../node_modules/framer-motion/dist/es/render/dom/motion.js"],"names":["createDefinition","propNames","isEnabled","props","some","name","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","layoutAnimation","LazyContext","createContext","strict","featureNames","Object","keys","numFeatures","length","MotionConfigContext","transformPagePoint","p","isStatic","usePresence","context","useContext","PresenceContext","isPresent","onExitComplete","register","id","useUniqueId","useEffect","counter","incrementId","useConstant","LayoutGroupContext","useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useVisualElement","Component","visualState","createVisualElement","config","lazyContext","parent","useVisualElementContext","presenceContext","layoutId","_a","layoutGroupId","undefined","useLayoutId","visualElementRef","useRef","renderer","current","__assign","presenceId","blockInitialAnimation","initial","visualElement","setProps","isPresenceRoot","syncRender","animationState","animateChanges","notifyUnmount","isVariantLabels","v","Array","isArray","isVariantLabel","resolveVariantFromProps","definition","custom","currentValues","currentVelocity","variants","resolveVariant","getProps","forEachValue","value","key","get","getCurrent","velocity","getVelocity","checkIfControllingVariants","animate","start","whileHover","whileDrag","whileTap","whileFocus","checkIfVariantNode","Boolean","useCreateMotionContext","inherit","getCurrentTreeVariants","MotionContext","useMemo","variantLabelsAsDependency","prop","join","createMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","forwardRef","externalRef","i","name_1","push","React","useFeatures","Provider","useCallback","instance","mount","call","unmount","isRefObject","useMotionRef","createMotionProxy","createConfig","customMotionComponentConfig","componentCache","Map","Proxy","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","valueScaleCorrection","isForcedMotionValue","layout","isTransformProp","isTransformOriginProp","translateAlias","x","y","z","transformPerspective","isCSSVariable","startsWith","getValueAsType","type","transform","buildHTMLStyles","state","latestValues","projection","layoutState","options","transformTemplate","buildProjectionTransform","buildProjectionTransformOrigin","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","numberValueTypes","valueAsType","default","isHydrated","correctedValue","process","applyTo","num","deltaFinal","treeScale","_b","transformIsDefault","_c","enableHardwareAcceleration","_d","allowTransformNone","transformString","sort","sortTransformProps","transformHasZ","numTransformKeys","trim","buildTransform","originX","originY","originZ","buildTransformOrigin","createHtmlRenderState","copyRawValuesOnly","target","source","isMotionValue","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","Set","isValidMotionProp","shouldForward","emotionIsPropValid_1","require","calcOrigin","origin","offset","size","px","progressToPixels","progress","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","__rest","attrs","dimensions","totalPathLength","width","height","calcSVGTransformOrigin","totalLength","spacing","useDashCase","buildSVGPath","createSvgRenderState","useSVGProps","visualProps","rawStyles","createUseRender","forwardMotionProps","ref","filteredProps","isDom","filterProps","elementProps","createElement","CAMEL_CASE_PATTERN","camelToDash","str","replace","toLowerCase","renderHTML","element","setProperty","camelCaseAttributes","renderSVG","renderState","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","isAnimationControls","resolveMotionValue","unwrappedValue","mix","toValue","makeState","createRenderState","onMount","makeLatestValues","makeUseVisualState","scrapeMotionValues","values","motionValues","isControllingVariants","isVariantNode","variantToSet","forEach","resolved","transitionEnd","transition","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","getTotalLength","htmlMotionConfig","createDomMotionConfig","baseConfig","createHoverEvent","isActive","callback","event","info","isMouseEvent","isDragActive","setActive","AnimationType","Hover","isNodeOrChild","child","parentElement","makeRenderlessComponent","hook","gestureAnimations","onTap","onTapStart","onTapCancel","hasPressListeners","isPressing","cancelPointerEndListeners","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","getInstance","onPointerCancel","usePointerEvent","pipe","addPointerEvent","window","useUnmountEffect","useDomEvent","Focus","onHoverStart","onHoverEnd","shallowCompare","next","prev","prevLength","testValueType","dimensionValueTypes","number","percent","degrees","vw","vh","parse","findDimensionValueType","find","valueTypes","__spreadArray","__read","color","complex","findValueType","setMotionValue","hasValue","getValue","addValue","motionValue","setTarget","makeTargetAnimatable","isKeyframesTarget","getOriginFromTransition","from","animateVariant","variant","getDefaultTransition","transitionOverride","getAnimation","animateTarget","Promise","resolve","getChildAnimations","variantChildren","forwardDelay","delayChildren","staggerChildren","staggerDirection","animations","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","delay","then","notifyAnimationComplete","all","animateChildren","when","first","last","_e","_f","animationTypeState","getState","valueTarget","shouldBlockAnimation","startAnimation","a","b","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","hasOwnProperty","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","reverse","numAnimationTypes","animateList","map","notifyAnimationStart","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","allAnimatedKeys","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","_loop_1","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","variantsHaveChanged","definitionList","resolvedValues","reduce","prevResolvedValues","allKeys","markToAnimate","delete","add","apply","fallbackAnimation_1","fallbackTarget","getBaseTarget","shouldAnimate","isAnimated","setAnimateFunction","makeAnimator","subscribe","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","panSession","handlers","onSessionStart","onStart","onMove","onEnd","updateHandlers","PanSession","end","groupDragControls","dragControls","VisualElementDragControls","cssVariableRegex","getVariableValue","depth","invariant","match","exec","parseCSSVariable","token","fallback","getComputedStyle","getPropertyValue","pixelsToPercent","pixels","axis","max","min","varToken","borderCorrectionDefinition","latest","_layoutState","parseFloat","defaultScaleCorrectors","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","delta","original","containsCSSVariables","cssVariables","shadow","template","createTransformer","xScale","scale","yScale","averageScale","output","i_1","cssVariable","_super","_this","this","arguments","frameTarget","axisBox","currentAnimationTarget","isAnimating","stopAxisAnimation","isAnimatingTree","originBox","targetBox","visibilityAction","shouldStackAnimate","onComplete","prevParent","safeToRemove","isRelative","projectionParent","getProjectionParent","prevParentViewportBox","prevViewportBox","parentLayout","getLayoutState","checkIfParentHasChanged","isProvidedCorrectDataForRelativeSharedLayout","calcRelativeOffset","boxHasMoved","hasMoved","eachAxis","targetLength","isTargetLocked","animateAxis","setProjectionTargetAxis","setVisibility","VisibilityAction","Show","notifyLayoutAnimationComplete","__extends","prototype","componentDidMount","animateMotionValue","enableLayoutProjection","unsubLayoutReady","onLayoutUpdate","layoutSafeToRemove","correctors","addScaleCorrection","componentWillUnmount","axisIsEqual","layoutProgress","getProjectionAnimationProgress","clearListeners","frame","tweenAxis","unsubscribeProgress","onChange","stop","layoutTransition","defaultLayoutTransition","getValueTransition","render","isZeroBox","zeroAxis","duration","ease","Measure","syncLayout","framerSyncLayout","isSharedLayout","onUnmount","remove","getSnapshotBeforeUpdate","syncUpdate","snapshotViewportBox","componentDidUpdate","flush","React__default","layoutAnimations","SharedLayoutContext","FramerTreeLayoutContext","createLayoutState","layoutCorrected","deltaTransform","zeroLayout","buildLayoutProjectionTransform","latestTransform","translate","rotate","rotateX","rotateY","identityProjection","buildLayoutProjectionTransformOrigin","names","FlatTree","children","isDirty","addUniqueItem","removeItem","compareByDepth","treeType","build","measureViewportBox","renderInstance","readValueFromInstance","resetTransform","restoreTransform","removeValueFromRenderState","unsubscribeFromLeadVisualElement","crossfader","projectionTargetProgress","removeFromVariantTree","lifecycles","managers","SubscriptionManager","propSubscriptions","clearAllListeners","manager","clear","updatePropListeners","on","propListener","handler","args","_i","notify","createLifecycles","targetFinal","leadProjection","leadLatestValues","hasViewportBoxUpdated","valueSubscriptions","prevMotionValues","baseTarget","isProjectionReady","applyBoxTransforms","updateBoxDelta","triggerBuild","valuesToRender","crossfadedValues","getCrossfadeState","update","notifyUpdate","updateTreeLayoutProjection","layoutTree","fireUpdateLayoutProjection","initialMotionValues","path","isVisible","isMounted","newInstance","pointTo","addVariantChild","cancelSync","preRender","updateLayoutProjection","stopLayoutAnimation","closestVariantNode","getClosestVariantNode","other","scheduleUpdateLayoutProjection","sync","getLayoutId","getStaticValue","setStaticValue","getLatestValues","visibility","scheduleRender","canMutate","removeValue","removeOnChange","latestValue","onUpdate","removeOnRenderRequest","onRenderRequest","bindToMotionValue","defaultValue","readValue","setBaseTarget","newProps","nextValue","prevValue","existingValue","hasAnimated","updateMotionValuesFromProps","getVariant","startAtParent","context_1","numVariantProps","variantProps","lockProjectionTarget","unlockProjectionTarget","setCrossfader","newCrossfader","startLayoutAnimation","relativeTarget","withTransform","viewportBox","removeBoxTransforms","notifySetAxisTarget","rebaseProjectionTarget","force","box","shouldRebase","notifyLayoutReady","relativeOffset","setCurrentViewportBox","notifyLayoutUpdate","prevTreeScaleX","prevTreeScaleY","prevDeltaTransform","treePath","resetBox","applyTreeDeltas","updateLayoutDeltas","notifyViewportBoxUpdate","fireResolveRelativeTargetBox","foundParent","ancestor","resolveRelativeTargetBox","relativeParent","calcRelativeBox","isDraggable","shouldResetTransform","_layoutResetTransform","newLead","onSetAxisTarget","onLayoutAnimationComplete","presence","Presence","Present","Entering","BoundingBoxDimension","positionalKeys","isPositionalKey","setAndResetVelocity","to","isNumOrPxType","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","transformProps","filter","positionalValues","top","left","bottom","right","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","removedTransforms","removeNonTranslationalTransform","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","originComputedStyle","targetBbox","convertChangedValueTypes","unitConversion","hasPositionalKey","parseDomVariant","HTMLElement","resolveCSSVariables","htmlConfig","domElement","defaultType","getDefaultValueType","computedStyle","compareDocumentPosition","getBoundingBox","mutableState","getOrigin","newValueKeys","numNewValues","targetValue","getAnimatableNone","checkTargetForNewValues","parsed","isProjectionTranform","htmlVisualElement","svgVisualElement","getAttribute","_element","createDomVisualElement","featureBundle","motion"],"mappings":"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","file":"static/js/1.d602c1eb.chunk.js","sourcesContent":["var createDefinition = function (propNames) { return ({\n    isEnabled: function (props) { return propNames.some(function (name) { return !!props[name]; }); },\n}); };\nvar featureDefinitions = {\n    measureLayout: createDefinition([\n        \"layout\",\n        \"layoutId\",\n        \"drag\",\n        \"_layoutResetTransform\",\n    ]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    layoutAnimation: createDefinition([\"layout\", \"layoutId\"]),\n};\nfunction loadFeatures(features) {\n    for (var key in features) {\n        var Component = features[key];\n        if (Component !== null)\n            featureDefinitions[key].Component = Component;\n    }\n}\n\nexport { featureDefinitions, loadFeatures };\n","import { createContext } from 'react';\n\nvar LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { __assign } from 'tslib';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { featureDefinitions } from './definitions.js';\nimport { invariant } from 'hey-listen';\nimport { LazyContext } from '../../context/LazyContext.js';\n\nvar featureNames = Object.keys(featureDefinitions);\nvar numFeatures = featureNames.length;\n/**\n * Load features via renderless components based on the provided MotionProps.\n */\nfunction useFeatures(props, visualElement, preloadedFeatures) {\n    var features = [];\n    var lazyContext = useContext(LazyContext);\n    if (!visualElement)\n        return null;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        lazyContext.strict) {\n        invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n    }\n    for (var i = 0; i < numFeatures; i++) {\n        var name_1 = featureNames[i];\n        var _a = featureDefinitions[name_1], isEnabled = _a.isEnabled, Component = _a.Component;\n        /**\n         * It might be possible in the future to use this moment to\n         * dynamically request functionality. In initial tests this\n         * was producing a lot of duplication amongst bundles.\n         */\n        if (isEnabled(props) && Component) {\n            features.push(React.createElement(Component, __assign({ key: name_1 }, props, { visualElement: visualElement })));\n        }\n    }\n    return features;\n}\n\nexport { useFeatures };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nvar MotionConfigContext = createContext({\n    transformPagePoint: function (p) { return p; },\n    isStatic: false,\n});\n\nexport { MotionConfigContext };\n","import { useContext, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.js';\nimport { useConstant } from '../../utils/use-constant.js';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    var context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    var isPresent = context.isPresent, onExitComplete = context.onExitComplete, register = context.register;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useOpaqueId when released in React\n    var id = useUniqueId();\n    useEffect(function () { return register(id); }, []);\n    var safeToRemove = function () { return onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id); };\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\nvar counter = 0;\nvar incrementId = function () { return counter++; };\nvar useUniqueId = function () { return useConstant(incrementId); };\n\nexport { isPresent, useIsPresent, usePresence };\n","import { createContext } from 'react';\n\n/**\n * @internal\n */\nvar LayoutGroupContext = createContext(null);\n\nexport { LayoutGroupContext };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.js';\n\nvar useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { __assign } from 'tslib';\nimport { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.js';\nimport { isPresent } from '../../components/AnimatePresence/use-presence.js';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.js';\nimport { useVisualElementContext } from '../../context/MotionContext/index.js';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.js';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.js';\nimport { LazyContext } from '../../context/LazyContext.js';\n\nfunction useLayoutId(_a) {\n    var layoutId = _a.layoutId;\n    var layoutGroupId = useContext(LayoutGroupContext);\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    var config = useContext(MotionConfigContext);\n    var lazyContext = useContext(LazyContext);\n    var parent = useVisualElementContext();\n    var presenceContext = useContext(PresenceContext);\n    var layoutId = useLayoutId(props);\n    var visualElementRef = useRef(undefined);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    if (!createVisualElement)\n        createVisualElement = lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState: visualState,\n            parent: parent,\n            props: __assign(__assign({}, props), { layoutId: layoutId }),\n            presenceId: presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id,\n            blockInitialAnimation: (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false,\n        });\n    }\n    var visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(function () {\n        if (!visualElement)\n            return;\n        visualElement.setProps(__assign(__assign(__assign({}, config), props), { layoutId: layoutId }));\n        visualElement.isPresent = isPresent(presenceContext);\n        visualElement.isPresenceRoot =\n            !parent || parent.presenceId !== (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id);\n        /**\n         * Fire a render to ensure the latest state is reflected on-screen.\n         */\n        visualElement.syncRender();\n    });\n    useEffect(function () {\n        var _a;\n        if (!visualElement)\n            return;\n        /**\n         * In a future refactor we can replace the features-as-components and\n         * have this loop through them all firing \"effect\" listeners\n         */\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.animateChanges();\n    });\n    useIsomorphicLayoutEffect(function () { return function () { return visualElement === null || visualElement === void 0 ? void 0 : visualElement.notifyUnmount(); }; }, []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","/**\n * Decides if the supplied variable is an array of variant labels\n */\nfunction isVariantLabels(v) {\n    return Array.isArray(v);\n}\n/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || isVariantLabels(v);\n}\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    var current = {};\n    visualElement.forEachValue(function (value, key) { return (current[key] = value.get()); });\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    var velocity = {};\n    visualElement.forEachValue(function (value, key) { return (velocity[key] = value.getVelocity()); });\n    return velocity;\n}\nfunction resolveVariantFromProps(props, definition, custom, currentValues, currentVelocity) {\n    var _a;\n    if (currentValues === void 0) { currentValues = {}; }\n    if (currentVelocity === void 0) { currentVelocity = {}; }\n    if (typeof definition === \"string\") {\n        definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];\n    }\n    return typeof definition === \"function\"\n        ? definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity)\n        : definition;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    var props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\nfunction checkIfControllingVariants(props) {\n    var _a;\n    return (typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === \"function\" ||\n        isVariantLabel(props.initial) ||\n        isVariantLabel(props.animate) ||\n        isVariantLabel(props.whileHover) ||\n        isVariantLabel(props.whileDrag) ||\n        isVariantLabel(props.whileTap) ||\n        isVariantLabel(props.whileFocus) ||\n        isVariantLabel(props.exit));\n}\nfunction checkIfVariantNode(props) {\n    return Boolean(checkIfControllingVariants(props) || props.variants);\n}\n\nexport { checkIfControllingVariants, checkIfVariantNode, isVariantLabel, isVariantLabels, resolveVariant, resolveVariantFromProps };\n","import { useMemo, useContext } from 'react';\nimport { MotionContext } from './index.js';\nimport { getCurrentTreeVariants } from './utils.js';\n\nfunction useCreateMotionContext(props, isStatic) {\n    var _a = getCurrentTreeVariants(props, useContext(MotionContext)), initial = _a.initial, animate = _a.animate;\n    return useMemo(function () { return ({ initial: initial, animate: animate }); }, \n    /**\n     * Only break memoisation in static mode\n     */\n    isStatic\n        ? [\n            variantLabelsAsDependency(initial),\n            variantLabelsAsDependency(animate),\n        ]\n        : []);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { checkIfControllingVariants, isVariantLabel } from '../../render/utils/variants.js';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (checkIfControllingVariants(props)) {\n        var initial = props.initial, animate = props.animate;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { useFeatures } from './features/use-features.js';\nimport { MotionConfigContext } from '../context/MotionConfigContext.js';\nimport { MotionContext } from '../context/MotionContext/index.js';\nimport { useVisualElement } from './utils/use-visual-element.js';\nimport { useMotionRef } from './utils/use-motion-ref.js';\nimport { useCreateMotionContext } from '../context/MotionContext/create.js';\nimport { loadFeatures } from './features/definitions.js';\nimport { isBrowser } from '../utils/is-browser.js';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n *\n * @internal\n */\nfunction createMotionComponent(_a) {\n    var preloadedFeatures = _a.preloadedFeatures, createVisualElement = _a.createVisualElement, useRender = _a.useRender, useVisualState = _a.useVisualState, Component = _a.Component;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we're rendering in a static environment, we only visually update the component\n         * as a result of a React-rerender rather than interactions or animations. This\n         * means we don't need to load additional memory structures like VisualElement,\n         * or any gesture/animation features.\n         */\n        var isStatic = useContext(MotionConfigContext).isStatic;\n        var features = null;\n        /**\n         * Create the tree context. This is memoized and will only trigger renders\n         * when the current tree variant changes in static mode.\n         */\n        var context = useCreateMotionContext(props, isStatic);\n        /**\n         *\n         */\n        var visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, props, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             *\n             * TODO: The intention is to move these away from a React-centric to a\n             * VisualElement-centric lifecycle scheme.\n             */\n            features = useFeatures(props, context.visualElement, preloadedFeatures);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(React.Fragment, null,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic)),\n            features));\n    }\n    return forwardRef(MotionComponent);\n}\n\nexport { createMotionComponent };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.js';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback(function (instance) {\n        var _a;\n        instance && ((_a = visualState.mount) === null || _a === void 0 ? void 0 : _a.call(visualState, instance));\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.js';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig) {\n        if (customMotionComponentConfig === void 0) { customMotionComponentConfig = {}; }\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    var componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: function (_target, key) {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nvar lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"svg\",\n    \"switch\",\n    \"symbol\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.js';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","var valueScaleCorrection = {};\n/**\n * @internal\n */\nfunction addScaleCorrection(correctors) {\n    for (var key in correctors) {\n        valueScaleCorrection[key] = correctors[key];\n    }\n}\n\nexport { addScaleCorrection, valueScaleCorrection };\n","import { valueScaleCorrection } from '../../render/dom/projection/scale-correction.js';\nimport { isTransformProp, isTransformOriginProp } from '../../render/html/utils/transform.js';\n\nfunction isForcedMotionValue(key, _a) {\n    var layout = _a.layout, layoutId = _a.layoutId;\n    return (isTransformProp(key) ||\n        isTransformOriginProp(key) ||\n        ((layout || layoutId !== undefined) &&\n            (!!valueScaleCorrection[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { sortTransformProps } from './transform.js';\n\nvar translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(_a, _b, transformIsDefault, transformTemplate) {\n    var transform = _a.transform, transformKeys = _a.transformKeys;\n    var _c = _b.enableHardwareAcceleration, enableHardwareAcceleration = _c === void 0 ? true : _c, _d = _b.allowTransformNone, allowTransformNone = _d === void 0 ? true : _d;\n    // The transform string we're going to build into.\n    var transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Track whether the defined transform has a defined z so we don't add a\n    // second to enable hardware acceleration\n    var transformHasZ = false;\n    // Loop over each transform and build them into transformString\n    var numTransformKeys = transformKeys.length;\n    for (var i = 0; i < numTransformKeys; i++) {\n        var key = transformKeys[i];\n        transformString += (translateAlias[key] || key) + \"(\" + transform[key] + \") \";\n        if (key === \"z\")\n            transformHasZ = true;\n    }\n    if (!transformHasZ && enableHardwareAcceleration) {\n        transformString += \"translateZ(0)\";\n    }\n    else {\n        transformString = transformString.trim();\n    }\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n/**\n * Build a transformOrigin style. Uses the same defaults as the browser for\n * undefined origins.\n */\nfunction buildTransformOrigin(_a) {\n    var _b = _a.originX, originX = _b === void 0 ? \"50%\" : _b, _c = _a.originY, originY = _c === void 0 ? \"50%\" : _c, _d = _a.originZ, originZ = _d === void 0 ? 0 : _d;\n    return originX + \" \" + originY + \" \" + originZ;\n}\n\nexport { buildTransform, buildTransformOrigin };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nvar getValueAsType = function (value, type) {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { valueScaleCorrection } from '../../dom/projection/scale-correction.js';\nimport { buildTransform, buildTransformOrigin } from './build-transform.js';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.js';\nimport { isTransformProp, isTransformOriginProp } from './transform.js';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.js';\nimport { numberValueTypes } from '../../dom/value-types/number.js';\n\nfunction buildHTMLStyles(state, latestValues, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin) {\n    var _a;\n    var style = state.style, vars = state.vars, transform = state.transform, transformKeys = state.transformKeys, transformOrigin = state.transformOrigin;\n    // Empty the transformKeys array. As we're throwing out refs to its items\n    // this might not be as cheap as suspected. Maybe using the array as a buffer\n    // with a manual incrementation would be better.\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    var hasTransform = false;\n    var hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    var transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (var key in latestValues) {\n        var value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        var valueType = numberValueTypes[key];\n        var valueAsType = getValueAsType(value, valueType);\n        if (isTransformProp(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0))\n                transformIsNone = false;\n        }\n        else if (isTransformOriginProp(key)) {\n            transformOrigin[key] = valueAsType;\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n        }\n        else {\n            /**\n             * If layout projection is on, and we need to perform scale correction for this\n             * value type, perform it.\n             */\n            if ((projection === null || projection === void 0 ? void 0 : projection.isHydrated) &&\n                (layoutState === null || layoutState === void 0 ? void 0 : layoutState.isHydrated) &&\n                valueScaleCorrection[key]) {\n                var correctedValue = valueScaleCorrection[key].process(value, layoutState, projection);\n                /**\n                 * Scale-correctable values can define a number of other values to break\n                 * down into. For instance borderRadius needs applying to borderBottomLeftRadius etc\n                 */\n                var applyTo = valueScaleCorrection[key].applyTo;\n                if (applyTo) {\n                    var num = applyTo.length;\n                    for (var i = 0; i < num; i++) {\n                        style[applyTo[i]] = correctedValue;\n                    }\n                }\n                else {\n                    style[key] = correctedValue;\n                }\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (layoutState &&\n        projection &&\n        buildProjectionTransform &&\n        buildProjectionTransformOrigin) {\n        style.transform = buildProjectionTransform(layoutState.deltaFinal, layoutState.treeScale, hasTransform ? transform : undefined);\n        if (transformTemplate) {\n            style.transform = transformTemplate(transform, style.transform);\n        }\n        style.transformOrigin = buildProjectionTransformOrigin(layoutState);\n    }\n    else {\n        if (hasTransform) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        if (hasTransformOrigin) {\n            style.transformOrigin = buildTransformOrigin(transformOrigin);\n        }\n    }\n}\n\nexport { buildHTMLStyles };\n","var createHtmlRenderState = function () { return ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n}); };\n\nexport { createHtmlRenderState };\n","import { __assign } from 'tslib';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.js';\nimport { isMotionValue } from '../../value/utils/is-motion-value.js';\nimport { buildHTMLStyles } from './utils/build-styles.js';\nimport { createHtmlRenderState } from './utils/create-render-state.js';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (var key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues(_a, visualState, isStatic) {\n    var transformTemplate = _a.transformTemplate;\n    return useMemo(function () {\n        var state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, undefined, undefined, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        var vars = state.vars, style = state.style;\n        return __assign(__assign({}, vars), style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    var styleProp = props.style || {};\n    var style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    if (props.transformValues) {\n        style = props.transformValues(style);\n    }\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    var htmlProps = {};\n    var style = useStyle(props, visualState, isStatic);\n    if (Boolean(props.drag)) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout =\n            \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : \"pan-\" + (props.drag === \"x\" ? \"y\" : \"x\");\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps, useStyle };\n","/**\n * A list of all valid MotionProps.\n *\n * @internalremarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nvar validMotionProps = new Set([\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"style\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"_layoutResetTransform\",\n    \"onLayoutAnimationComplete\",\n    \"onViewportBoxUpdate\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"whileDrag\",\n    \"onPan\",\n    \"onPanStart\",\n    \"onPanEnd\",\n    \"onPanSessionStart\",\n    \"onTap\",\n    \"onTapStart\",\n    \"onTapCancel\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"whileFocus\",\n    \"whileTap\",\n    \"whileHover\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.js';\n\nvar shouldForward = function (key) { return !isValidMotionProp(key); };\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    var emotionIsPropValid_1 = require(\"@emotion/is-prop-valid\").default;\n    shouldForward = function (key) {\n        // Handle events explicitly as Emotion validates them all as true\n        if (key.startsWith(\"on\")) {\n            return !isValidMotionProp(key);\n        }\n        else {\n            return emotionIsPropValid_1(key);\n        }\n    };\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    var filteredProps = {};\n    for (var key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps };\n","import { px } from 'style-value-types';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    var pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    var pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return pxOriginX + \" \" + pxOriginY;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from 'style-value-types';\n\n// Convert a progress 0-1 to a pixels value based on the provided length\nvar progressToPixels = function (progress, length) {\n    return px.transform(progress * length);\n};\nvar dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nvar camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, totalLength, length, spacing, offset, useDashCase) {\n    if (spacing === void 0) { spacing = 1; }\n    if (offset === void 0) { offset = 0; }\n    if (useDashCase === void 0) { useDashCase = true; }\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    var keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = progressToPixels(-offset, totalLength);\n    // Build the dash array\n    var pathLength = progressToPixels(length, totalLength);\n    var pathSpacing = progressToPixels(spacing, totalLength);\n    attrs[keys.array] = pathLength + \" \" + pathSpacing;\n}\n\nexport { buildSVGPath };\n","import { __rest } from 'tslib';\nimport { buildHTMLStyles } from '../../html/utils/build-styles.js';\nimport { calcSVGTransformOrigin } from './transform-origin.js';\nimport { buildSVGPath } from './path.js';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, _a, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin) {\n    var attrX = _a.attrX, attrY = _a.attrY, originX = _a.originX, originY = _a.originY, pathLength = _a.pathLength, _b = _a.pathSpacing, pathSpacing = _b === void 0 ? 1 : _b, _c = _a.pathOffset, pathOffset = _c === void 0 ? 0 : _c, \n    // This is object creation, which we try to avoid per-frame.\n    latest = __rest(_a, [\"attrX\", \"attrY\", \"originX\", \"originY\", \"pathLength\", \"pathSpacing\", \"pathOffset\"]);\n    buildHTMLStyles(state, latest, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin);\n    state.attrs = state.style;\n    state.style = {};\n    var attrs = state.attrs, style = state.style, dimensions = state.dimensions, totalPathLength = state.totalPathLength;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been measured\n    if (totalPathLength !== undefined && pathLength !== undefined) {\n        buildSVGPath(attrs, totalPathLength, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { __assign } from 'tslib';\nimport { createHtmlRenderState } from '../../html/utils/create-render-state.js';\n\nvar createSvgRenderState = function () { return (__assign(__assign({}, createHtmlRenderState()), { attrs: {} })); };\n\nexport { createSvgRenderState };\n","import { __assign } from 'tslib';\nimport { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.js';\nimport { buildSVGAttrs } from './utils/build-attrs.js';\nimport { createSvgRenderState } from './utils/create-render-state.js';\n\nfunction useSVGProps(props, visualState) {\n    var visualProps = useMemo(function () {\n        var state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, undefined, undefined, { enableHardwareAcceleration: false }, props.transformTemplate);\n        return __assign(__assign({}, state.attrs), { style: __assign({}, state.style) });\n    }, [visualState]);\n    if (props.style) {\n        var rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = __assign(__assign({}, rawStyles), visualProps.style);\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { __assign } from 'tslib';\nimport { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.js';\nimport { filterProps } from './utils/filter-props.js';\nimport { isSVGComponent } from './utils/is-svg-component.js';\nimport { useSVGProps } from '../svg/use-props.js';\n\nfunction createUseRender(forwardMotionProps) {\n    if (forwardMotionProps === void 0) { forwardMotionProps = false; }\n    var useRender = function (Component, props, ref, _a, isStatic) {\n        var latestValues = _a.latestValues;\n        var useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        var visualProps = useVisualProps(props, latestValues, isStatic);\n        var filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        var elementProps = __assign(__assign(__assign({}, filteredProps), visualProps), { ref: ref });\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","var CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;\nvar REPLACE_TEMPLATE = \"$1-$2\";\n/**\n * Convert camelCase to dash-case properties.\n */\nvar camelToDash = function (str) {\n    return str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();\n};\n\nexport { camelToDash };\n","function renderHTML(element, _a) {\n    var style = _a.style, vars = _a.vars;\n    // Directly assign style into the Element's style prop. In tests Object.assign is the\n    // fastest way to assign styles.\n    Object.assign(element.style, style);\n    // Loop over any CSS variables and assign those.\n    for (var key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nvar camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.js';\nimport { renderHTML } from '../../html/utils/render.js';\nimport { camelCaseAttributes } from './camel-case-attrs.js';\n\nfunction renderSVG(element, renderState) {\n    renderHTML(element, renderState);\n    for (var key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.js';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.js';\n\nfunction scrapeMotionValuesFromProps(props) {\n    var style = props.style;\n    var newValues = {};\n    for (var key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.js';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.js';\n\nfunction scrapeMotionValuesFromProps(props) {\n    var newValues = scrapeMotionValuesFromProps$1(props);\n    for (var key in props) {\n        if (isMotionValue(props[key])) {\n            var targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isCustomValue } from '../../utils/resolve-value.js';\nimport { isMotionValue } from './is-motion-value.js';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n *\n * @internal\n */\nfunction resolveMotionValue(value) {\n    var unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.js';\n\nvar isCustomValue = function (v) {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nvar resolveFinalValueInKeyframes = function (v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { __rest } from 'tslib';\nimport { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.js';\nimport { PresenceContext } from '../../context/PresenceContext.js';\nimport { checkIfControllingVariants, checkIfVariantNode, resolveVariantFromProps } from '../../render/utils/variants.js';\nimport { useConstant } from '../../utils/use-constant.js';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.js';\nimport { MotionContext } from '../../context/MotionContext/index.js';\n\nfunction makeState(_a, props, context, presenceContext) {\n    var scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps, createRenderState = _a.createRenderState, onMount = _a.onMount;\n    var state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = function (instance) { return onMount(props, instance, state); };\n    }\n    return state;\n}\nvar makeUseVisualState = function (config) { return function (props, isStatic) {\n    var context = useContext(MotionContext);\n    var presenceContext = useContext(PresenceContext);\n    return isStatic\n        ? makeState(config, props, context, presenceContext)\n        : useConstant(function () { return makeState(config, props, context, presenceContext); });\n}; };\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    var values = {};\n    var blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;\n    var motionValues = scrapeMotionValues(props);\n    for (var key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    var initial = props.initial, animate = props.animate;\n    var isControllingVariants = checkIfControllingVariants(props);\n    var isVariantNode = checkIfVariantNode(props);\n    if (context &&\n        isVariantNode &&\n        !isControllingVariants &&\n        props.inherit !== false) {\n        initial !== null && initial !== void 0 ? initial : (initial = context.initial);\n        animate !== null && animate !== void 0 ? animate : (animate = context.animate);\n    }\n    var variantToSet = blockInitialAnimation || initial === false ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        var list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach(function (definition) {\n            var resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            var transitionEnd = resolved.transitionEnd; resolved.transition; var target = __rest(resolved, [\"transitionEnd\", \"transition\"]);\n            for (var key in target)\n                values[key] = target[key];\n            for (var key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.js';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.js';\nimport { createSvgRenderState } from './utils/create-render-state.js';\nimport { buildSVGAttrs } from './utils/build-attrs.js';\n\nvar svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: function (props, instance, _a) {\n            var renderState = _a.renderState, latestValues = _a.latestValues;\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            if (isPath(instance)) {\n                renderState.totalPathLength = instance.getTotalLength();\n            }\n            buildSVGAttrs(renderState, latestValues, undefined, undefined, { enableHardwareAcceleration: false }, props.transformTemplate);\n            // TODO: Replace with direct assignment\n            renderSVG(instance, renderState);\n        },\n    }),\n};\nfunction isPath(element) {\n    return element.tagName === \"path\";\n}\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.js';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\nimport { createHtmlRenderState } from './utils/create-render-state.js';\n\nvar htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { __assign } from 'tslib';\nimport { isSVGComponent } from './is-svg-component.js';\nimport { createUseRender } from '../use-render.js';\nimport { svgMotionConfig } from '../../svg/config-motion.js';\nimport { htmlMotionConfig } from '../../html/config-motion.js';\n\nfunction createDomMotionConfig(Component, _a, preloadedFeatures, createVisualElement) {\n    var _b = _a.forwardMotionProps, forwardMotionProps = _b === void 0 ? false : _b;\n    var baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return __assign(__assign({}, baseConfig), { preloadedFeatures: preloadedFeatures, useRender: createUseRender(forwardMotionProps), createVisualElement: createVisualElement,\n        Component: Component });\n}\n\nexport { createDomMotionConfig };\n","import { isMouseEvent } from './utils/event-type.js';\nimport { AnimationType } from '../render/utils/types.js';\nimport { usePointerEvent } from '../events/use-pointer-event.js';\nimport { isDragActive } from './drag/utils/lock.js';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return function (event, info) {\n        var _a;\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        callback === null || callback === void 0 ? void 0 : callback(event, info);\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Hover, isActive);\n    };\n}\nfunction useHoverGesture(_a) {\n    var onHoverStart = _a.onHoverStart, onHoverEnd = _a.onHoverEnd, whileHover = _a.whileHover, visualElement = _a.visualElement;\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined);\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined);\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nvar isNodeOrChild = function (parent, child) {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","var makeRenderlessComponent = function (hook) { return function (props) {\n    hook(props);\n    return null;\n}; };\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.js';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.js';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.js';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.js';\n\nvar gestureAnimations = {\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.js';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.js';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.js';\nimport { pipe } from 'popmotion';\nimport { AnimationType } from '../render/utils/types.js';\nimport { isDragActive } from './drag/utils/lock.js';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture(_a) {\n    var onTap = _a.onTap, onTapStart = _a.onTapStart, onTapCancel = _a.onTapCancel, whileTap = _a.whileTap, visualElement = _a.visualElement;\n    var hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    var isPressing = useRef(false);\n    var cancelPointerEndListeners = useRef(null);\n    function removePointerEndListener() {\n        var _a;\n        (_a = cancelPointerEndListeners.current) === null || _a === void 0 ? void 0 : _a.call(cancelPointerEndListeners);\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        var _a;\n        removePointerEndListener();\n        isPressing.current = false;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.getInstance(), event.target)\n            ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info)\n            : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp), addPointerEvent(window, \"pointercancel\", onPointerCancel));\n        onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, true);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.js';\nimport { useDomEvent } from '../events/use-dom-event.js';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture(_a) {\n    var whileFocus = _a.whileFocus, visualElement = _a.visualElement;\n    var onFocus = function () {\n        var _a;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Focus, true);\n    };\n    var onBlur = function () {\n        var _a;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    var prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (var i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Tests a provided value against a ValueType\n */\nvar testValueType = function (v) { return function (type) { return type.test(v); }; };\n\nexport { testValueType };\n","import { number, px, percent, degrees, vw, vh } from 'style-value-types';\nimport { testValueType } from './test.js';\nimport { auto } from './type-auto.js';\n\n/**\n * A list of value types commonly used for dimensions\n */\nvar dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nvar findDimensionValueType = function (v) {\n    return dimensionValueTypes.find(testValueType(v));\n};\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nvar auto = {\n    test: function (v) { return v === \"auto\"; },\n    parse: function (v) { return v; },\n};\n\nexport { auto };\n","import { __spreadArray, __read } from 'tslib';\nimport { color, complex } from 'style-value-types';\nimport { dimensionValueTypes } from './dimensions.js';\nimport { testValueType } from './test.js';\n\n/**\n * A list of all ValueTypes\n */\nvar valueTypes = __spreadArray(__spreadArray([], __read(dimensionValueTypes)), [color, complex]);\n/**\n * Tests a value against the list of ValueTypes\n */\nvar findValueType = function (v) { return valueTypes.find(testValueType(v)); };\n\nexport { findValueType };\n","import { __rest, __assign, __spreadArray, __read } from 'tslib';\nimport { complex } from 'style-value-types';\nimport { isNumericalString } from '../../utils/is-numerical-string.js';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.js';\nimport { motionValue } from '../../value/index.js';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.js';\nimport { findValueType } from '../dom/value-types/find.js';\nimport { resolveVariant } from './variants.js';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    var resolved = resolveVariant(visualElement, definition);\n    var _a = resolved\n        ? visualElement.makeTargetAnimatable(resolved, false)\n        : {}, _b = _a.transitionEnd, transitionEnd = _b === void 0 ? {} : _b; _a.transition; var target = __rest(_a, [\"transitionEnd\", \"transition\"]);\n    target = __assign(__assign({}, target), transitionEnd);\n    for (var key in target) {\n        var value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    var reversedLabels = __spreadArray([], __read(variantLabels)).reverse();\n    reversedLabels.forEach(function (key) {\n        var _a;\n        var variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b, _c;\n    var _d;\n    var newValueKeys = Object.keys(target).filter(function (key) { return !visualElement.hasValue(key); });\n    var numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (var i = 0; i < numNewValues; i++) {\n        var key = newValueKeys[i];\n        var targetValue = target[key];\n        var value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" && isNumericalString(value)) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : (_d[key] = value);\n        visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    var valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a, _b;\n    var origin = {};\n    for (var key in target) {\n        origin[key] =\n            (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { __read, __rest, __assign } from 'tslib';\nimport { startAnimation } from '../../animation/utils/transitions.js';\nimport { setTarget } from './setters.js';\nimport { resolveVariant } from './variants.js';\n\n/**\n * @internal\n */\nfunction animateVisualElement(visualElement, definition, options) {\n    if (options === void 0) { options = {}; }\n    visualElement.notifyAnimationStart();\n    var animation;\n    if (Array.isArray(definition)) {\n        var animations = definition.map(function (variant) {\n            return animateVariant(visualElement, variant, options);\n        });\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        var resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(function () {\n        return visualElement.notifyAnimationComplete(definition);\n    });\n}\nfunction animateVariant(visualElement, variant, options) {\n    var _a;\n    if (options === void 0) { options = {}; }\n    var resolved = resolveVariant(visualElement, variant, options.custom);\n    var _b = (resolved || {}).transition, transition = _b === void 0 ? visualElement.getDefaultTransition() || {} : _b;\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    var getAnimation = resolved\n        ? function () { return animateTarget(visualElement, resolved, options); }\n        : function () { return Promise.resolve(); };\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    var getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? function (forwardDelay) {\n            if (forwardDelay === void 0) { forwardDelay = 0; }\n            var _a = transition.delayChildren, delayChildren = _a === void 0 ? 0 : _a, staggerChildren = transition.staggerChildren, staggerDirection = transition.staggerDirection;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : function () { return Promise.resolve(); };\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    var when = transition.when;\n    if (when) {\n        var _c = __read(when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation], 2), first = _c[0], last = _c[1];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, _a) {\n    var _b;\n    var _c = _a === void 0 ? {} : _a, _d = _c.delay, delay = _d === void 0 ? 0 : _d, transitionOverride = _c.transitionOverride, type = _c.type;\n    var _e = visualElement.makeTargetAnimatable(definition), _f = _e.transition, transition = _f === void 0 ? visualElement.getDefaultTransition() : _f, transitionEnd = _e.transitionEnd, target = __rest(_e, [\"transition\", \"transitionEnd\"]);\n    if (transitionOverride)\n        transition = transitionOverride;\n    var animations = [];\n    var animationTypeState = type && ((_b = visualElement.animationState) === null || _b === void 0 ? void 0 : _b.getState()[type]);\n    for (var key in target) {\n        var value = visualElement.getValue(key);\n        var valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        var animation = startAnimation(key, value, valueTarget, __assign({ delay: delay }, transition));\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(function () {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren, staggerChildren, staggerDirection, options) {\n    if (delayChildren === void 0) { delayChildren = 0; }\n    if (staggerChildren === void 0) { staggerChildren = 0; }\n    if (staggerDirection === void 0) { staggerDirection = 1; }\n    var animations = [];\n    var maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    var generateStaggerDuration = staggerDirection === 1\n        ? function (i) {\n            if (i === void 0) { i = 0; }\n            return i * staggerChildren;\n        }\n        : function (i) {\n            if (i === void 0) { i = 0; }\n            return maxStaggerDuration - i * staggerChildren;\n        };\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach(function (child, i) {\n        animations.push(animateVariant(child, variant, __assign(__assign({}, options), { delay: delayChildren + generateStaggerDuration(i) })).then(function () { return child.notifyAnimationComplete(variant); }));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.forEachValue(function (value) { return value.stop(); });\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation(_a, key) {\n    var protectedKeys = _a.protectedKeys, needsAnimating = _a.needsAnimating;\n    var shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { __spreadArray, __read, __assign, __rest } from 'tslib';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.js';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.js';\nimport { shallowCompare } from '../../utils/shallow-compare.js';\nimport { animateVisualElement } from './animation.js';\nimport { AnimationType } from './types.js';\nimport { isVariantLabels, resolveVariant, isVariantLabel } from './variants.js';\n\nvar variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Focus,\n    AnimationType.Exit,\n];\nvar reversePriorityOrder = __spreadArray([], __read(variantPriorityOrder)).reverse();\nvar numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return function (animations) {\n        return Promise.all(animations.map(function (_a) {\n            var animation = _a.animation, options = _a.options;\n            return animateVisualElement(visualElement, animation, options);\n        }));\n    };\n}\nfunction createAnimationState(visualElement) {\n    var animate = animateList(visualElement);\n    var state = createState();\n    var allAnimatedKeys = {};\n    var isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    var buildResolvedTypeValues = function (acc, definition) {\n        var resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            resolved.transition; var transitionEnd = resolved.transitionEnd, target = __rest(resolved, [\"transition\", \"transitionEnd\"]);\n            acc = __assign(__assign(__assign({}, acc), target), transitionEnd);\n        }\n        return acc;\n    };\n    function isAnimated(key) {\n        return allAnimatedKeys[key] !== undefined;\n    }\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        var props = visualElement.getProps();\n        var context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        var animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        var removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        var encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        var removedVariantIndex = Infinity;\n        var _loop_1 = function (i) {\n            var type = reversePriorityOrder[i];\n            var typeState = state[type];\n            var prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            var propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            var activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            var isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = __assign({}, encounteredKeys);\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                return \"continue\";\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            var shouldAnimateType = variantsHaveChanged(typeState.prevProp, prop) ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            var definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            var _b = typeState.prevResolvedValues, prevResolvedValues = _b === void 0 ? {} : _b;\n            var allKeys = __assign(__assign({}, prevResolvedValues), resolvedValues);\n            var markToAnimate = function (key) {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (var key in allKeys) {\n                var next = resolvedValues[key];\n                var prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev)) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = __assign(__assign({}, encounteredKeys), resolvedValues);\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push.apply(animations, __spreadArray([], __read(definitionList.map(function (animation) { return ({\n                    animation: animation,\n                    options: __assign({ type: type }, options),\n                }); }))));\n            }\n        };\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (var i = 0; i < numAnimationTypes; i++) {\n            _loop_1(i);\n        }\n        allAnimatedKeys = __assign({}, encounteredKeys);\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            var fallbackAnimation_1 = {};\n            removedKeys.forEach(function (key) {\n                var fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation_1[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation_1 });\n        }\n        var shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        return animateChanges(options, type);\n    }\n    return {\n        isAnimated: isAnimated,\n        animateChanges: animateChanges,\n        setActive: setActive,\n        setAnimateFunction: setAnimateFunction,\n        getState: function () { return state; },\n    };\n}\nfunction variantsHaveChanged(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (isVariantLabels(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive) {\n    if (isActive === void 0) { isActive = false; }\n    return {\n        isActive: isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    var _a;\n    return _a = {},\n        _a[AnimationType.Animate] = createTypeState(true),\n        _a[AnimationType.Hover] = createTypeState(),\n        _a[AnimationType.Tap] = createTypeState(),\n        _a[AnimationType.Drag] = createTypeState(),\n        _a[AnimationType.Focus] = createTypeState(),\n        _a[AnimationType.Exit] = createTypeState(),\n        _a;\n}\n\nexport { createAnimationState, variantPriorityOrder, variantsHaveChanged };\n","import { __read } from 'tslib';\nimport { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.js';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.js';\nimport { PresenceContext } from '../../context/PresenceContext.js';\nimport { createAnimationState } from '../../render/utils/animation-state.js';\nimport { AnimationType } from '../../render/utils/types.js';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.js';\n\nvar animations = {\n    animation: makeRenderlessComponent(function (_a) {\n        var visualElement = _a.visualElement, animate = _a.animate;\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(function () { return animate.subscribe(visualElement); }, [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent(function (props) {\n        var custom = props.custom, visualElement = props.visualElement;\n        var _a = __read(usePresence(), 2), isPresent = _a[0], onExitComplete = _a[1];\n        var presenceContext = useContext(PresenceContext);\n        useEffect(function () {\n            var _a, _b;\n            var animation = (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Exit, !isPresent, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });\n            !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(onExitComplete));\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","import { useDrag } from '../../gestures/drag/use-drag.js';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.js';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.js';\n\nvar drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.js';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.js';\nimport { usePointerEvent } from '../events/use-pointer-event.js';\nimport { PanSession } from './PanSession.js';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @internalremarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture(_a) {\n    var onPan = _a.onPan, onPanStart = _a.onPanStart, onPanEnd = _a.onPanEnd, onPanSessionStart = _a.onPanSessionStart, visualElement = _a.visualElement;\n    var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    var panSession = useRef(null);\n    var transformPagePoint = useContext(MotionConfigContext).transformPagePoint;\n    var handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: function (event, info) {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(function () {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint: transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(function () { return panSession.current && panSession.current.end(); });\n}\n\nexport { usePanGesture };\n","import { __assign } from 'tslib';\nimport { useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.js';\nimport { VisualElementDragControls } from './VisualElementDragControls.js';\nimport { useConstant } from '../../utils/use-constant.js';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    var groupDragControls = props.dragControls, visualElement = props.visualElement;\n    var transformPagePoint = useContext(MotionConfigContext).transformPagePoint;\n    var dragControls = useConstant(function () {\n        return new VisualElementDragControls({\n            visualElement: visualElement,\n        });\n    });\n    dragControls.setProps(__assign(__assign({}, props), { transformPagePoint: transformPagePoint }));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(function () { return groupDragControls && groupDragControls.subscribe(dragControls); }, [dragControls]);\n    // Mount the drag controls with the visualElement\n    useEffect(function () { return dragControls.mount(visualElement); }, []);\n}\n\nexport { useDrag };\n","import { __rest, __assign, __read } from 'tslib';\nimport { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nvar cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    var match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    var _a = __read(match, 3), token = _a[1], fallback = _a[2];\n    return [token, fallback];\n}\nvar maxDepth = 4;\nfunction getVariableValue(current, element, depth) {\n    if (depth === void 0) { depth = 1; }\n    invariant(depth <= maxDepth, \"Max CSS variable fallback depth detected in property \\\"\" + current + \"\\\". This may indicate a circular fallback dependency.\");\n    var _a = __read(parseCSSVariable(current), 2), token = _a[0], fallback = _a[1];\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    var resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, _a, transitionEnd) {\n    var _b;\n    var target = __rest(_a, []);\n    var element = visualElement.getInstance();\n    if (!(element instanceof HTMLElement))\n        return { target: target, transitionEnd: transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = __assign({}, transitionEnd);\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.forEachValue(function (value) {\n        var current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        var resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (var key in target) {\n        var current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        var resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd)\n            (_b = transitionEnd[key]) !== null && _b !== void 0 ? _b : (transitionEnd[key] = current);\n    }\n    return { target: target, transitionEnd: transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { __assign } from 'tslib';\nimport { complex, px } from 'style-value-types';\nimport { mix } from 'popmotion';\nimport { cssVariableRegex } from '../utils/css-variables-conversion.js';\n\nfunction pixelsToPercent(pixels, axis) {\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nfunction correctBorderRadius(latest, _layoutState, _a) {\n    var target = _a.target;\n    /**\n     * If latest is a string, if it's a percentage we can return immediately as it's\n     * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n     */\n    if (typeof latest === \"string\") {\n        if (px.test(latest)) {\n            latest = parseFloat(latest);\n        }\n        else {\n            return latest;\n        }\n    }\n    /**\n     * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n     * pixel value as a percentage of each axis\n     */\n    var x = pixelsToPercent(latest, target.x);\n    var y = pixelsToPercent(latest, target.y);\n    return x + \"% \" + y + \"%\";\n}\nvar varToken = \"_$css\";\nfunction correctBoxShadow(latest, _a) {\n    var delta = _a.delta, treeScale = _a.treeScale;\n    var original = latest;\n    /**\n     * We need to first strip and store CSS variables from the string.\n     */\n    var containsCSSVariables = latest.includes(\"var(\");\n    var cssVariables = [];\n    if (containsCSSVariables) {\n        latest = latest.replace(cssVariableRegex, function (match) {\n            cssVariables.push(match);\n            return varToken;\n        });\n    }\n    var shadow = complex.parse(latest);\n    // TODO: Doesn't support multiple shadows\n    if (shadow.length > 5)\n        return original;\n    var template = complex.createTransformer(latest);\n    var offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n    // Calculate the overall context scale\n    var xScale = delta.x.scale * treeScale.x;\n    var yScale = delta.y.scale * treeScale.y;\n    shadow[0 + offset] /= xScale;\n    shadow[1 + offset] /= yScale;\n    /**\n     * Ideally we'd correct x and y scales individually, but because blur and\n     * spread apply to both we have to take a scale average and apply that instead.\n     * We could potentially improve the outcome of this by incorporating the ratio between\n     * the two scales.\n     */\n    var averageScale = mix(xScale, yScale, 0.5);\n    // Blur\n    if (typeof shadow[2 + offset] === \"number\")\n        shadow[2 + offset] /= averageScale;\n    // Spread\n    if (typeof shadow[3 + offset] === \"number\")\n        shadow[3 + offset] /= averageScale;\n    var output = template(shadow);\n    if (containsCSSVariables) {\n        var i_1 = 0;\n        output = output.replace(varToken, function () {\n            var cssVariable = cssVariables[i_1];\n            i_1++;\n            return cssVariable;\n        });\n    }\n    return output;\n}\nvar borderCorrectionDefinition = {\n    process: correctBorderRadius,\n};\nvar defaultScaleCorrectors = {\n    borderRadius: __assign(__assign({}, borderCorrectionDefinition), { applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ] }),\n    borderTopLeftRadius: borderCorrectionDefinition,\n    borderTopRightRadius: borderCorrectionDefinition,\n    borderBottomLeftRadius: borderCorrectionDefinition,\n    borderBottomRightRadius: borderCorrectionDefinition,\n    boxShadow: {\n        process: correctBoxShadow,\n    },\n};\n\nexport { correctBorderRadius, correctBoxShadow, defaultScaleCorrectors, pixelsToPercent };\n","import { __extends, __rest, __assign, __read } from 'tslib';\nimport * as React from 'react';\nimport { eachAxis } from '../../../utils/each-axis.js';\nimport { startAnimation, getValueTransition } from '../../../animation/utils/transitions.js';\nimport { checkIfParentHasChanged, calcRelativeOffset, tweenAxis } from './utils.js';\nimport { VisibilityAction } from '../../../components/AnimateSharedLayout/types.js';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.js';\nimport { axisBox } from '../../../utils/geometry/index.js';\nimport { addScaleCorrection } from '../../../render/dom/projection/scale-correction.js';\nimport { defaultScaleCorrectors } from '../../../render/dom/projection/default-scale-correctors.js';\n\nvar progressTarget = 1000;\nvar Animate = /** @class */ (function (_super) {\n    __extends(Animate, _super);\n    function Animate() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * A mutable object that tracks the target viewport box\n         * for the current animation frame.\n         */\n        _this.frameTarget = axisBox();\n        /**\n         * The current animation target, we use this to check whether to start\n         * a new animation or continue the existing one.\n         */\n        _this.currentAnimationTarget = axisBox();\n        /**\n         * Track whether we're animating this axis.\n         */\n        _this.isAnimating = {\n            x: false,\n            y: false,\n        };\n        _this.stopAxisAnimation = {\n            x: undefined,\n            y: undefined,\n        };\n        _this.isAnimatingTree = false;\n        _this.animate = function (target, origin, _a) {\n            if (_a === void 0) { _a = {}; }\n            var originBox = _a.originBox, targetBox = _a.targetBox, visibilityAction = _a.visibilityAction, shouldStackAnimate = _a.shouldStackAnimate, onComplete = _a.onComplete, prevParent = _a.prevParent, config = __rest(_a, [\"originBox\", \"targetBox\", \"visibilityAction\", \"shouldStackAnimate\", \"onComplete\", \"prevParent\"]);\n            var _b = _this.props, visualElement = _b.visualElement, layout = _b.layout;\n            /**\n             * Early return if we've been instructed not to animate this render.\n             */\n            if (shouldStackAnimate === false) {\n                _this.isAnimatingTree = false;\n                return _this.safeToRemove();\n            }\n            /**\n             * Prioritise tree animations\n             */\n            if (_this.isAnimatingTree && shouldStackAnimate !== true) {\n                return;\n            }\n            else if (shouldStackAnimate) {\n                _this.isAnimatingTree = true;\n            }\n            /**\n             * Allow the measured origin (prev bounding box) and target (actual layout) to be\n             * overridden by the provided config.\n             */\n            origin = originBox || origin;\n            target = targetBox || target;\n            /**\n             * If this element has a projecting parent, there's an opportunity to animate\n             * it relatively to that parent rather than relatively to the viewport. This\n             * allows us to add orchestrated animations.\n             */\n            var isRelative = false;\n            var projectionParent = visualElement.getProjectionParent();\n            if (projectionParent) {\n                var prevParentViewportBox = projectionParent.prevViewportBox;\n                var parentLayout = projectionParent.getLayoutState().layout;\n                /**\n                 * If we're being provided a previous parent VisualElement by AnimateSharedLayout\n                 */\n                if (prevParent) {\n                    /**\n                     * If we've been provided an explicit target box it means we're animating back\n                     * to this previous parent. So we can make a relative box by comparing to the previous\n                     * parent's layout\n                     */\n                    if (targetBox) {\n                        parentLayout = prevParent.getLayoutState().layout;\n                    }\n                    /**\n                     * Likewise if we've been provided an explicit origin box it means we're\n                     * animating out from a different element. So we should figure out where that was\n                     * on screen relative to the new parent element.\n                     */\n                    if (originBox &&\n                        !checkIfParentHasChanged(prevParent, projectionParent) &&\n                        prevParent.prevViewportBox) {\n                        prevParentViewportBox = prevParent.prevViewportBox;\n                    }\n                }\n                if (prevParentViewportBox &&\n                    isProvidedCorrectDataForRelativeSharedLayout(prevParent, originBox, targetBox)) {\n                    isRelative = true;\n                    origin = calcRelativeOffset(prevParentViewportBox, origin);\n                    target = calcRelativeOffset(parentLayout, target);\n                }\n            }\n            var boxHasMoved = hasMoved(origin, target);\n            var animations = eachAxis(function (axis) {\n                var _a, _b;\n                /**\n                 * If layout is set to \"position\", we can resize the origin box based on the target\n                 * box and only animate its position.\n                 */\n                if (layout === \"position\") {\n                    var targetLength = target[axis].max - target[axis].min;\n                    origin[axis].max = origin[axis].min + targetLength;\n                }\n                if (visualElement.projection.isTargetLocked) {\n                    return;\n                }\n                else if (visibilityAction !== undefined) {\n                    visualElement.setVisibility(visibilityAction === VisibilityAction.Show);\n                }\n                else if (boxHasMoved) {\n                    // If the box has moved, animate between it's current visual state and its\n                    // final state\n                    return _this.animateAxis(axis, target[axis], origin[axis], __assign(__assign({}, config), { isRelative: isRelative }));\n                }\n                else {\n                    (_b = (_a = _this.stopAxisAnimation)[axis]) === null || _b === void 0 ? void 0 : _b.call(_a);\n                    // If the box has remained in the same place, immediately set the axis target\n                    // to the final desired state\n                    return visualElement.setProjectionTargetAxis(axis, target[axis].min, target[axis].max, isRelative);\n                }\n            });\n            // Force a render to ensure there's no flash of uncorrected bounding box.\n            visualElement.syncRender();\n            /**\n             * If this visualElement isn't present (ie it's been removed from the tree by the user but\n             * kept in by the tree by AnimatePresence) then call safeToRemove when all axis animations\n             * have successfully finished.\n             */\n            return Promise.all(animations).then(function () {\n                _this.isAnimatingTree = false;\n                onComplete && onComplete();\n                visualElement.notifyLayoutAnimationComplete();\n            });\n        };\n        return _this;\n    }\n    Animate.prototype.componentDidMount = function () {\n        var _this = this;\n        var visualElement = this.props.visualElement;\n        visualElement.animateMotionValue = startAnimation;\n        visualElement.enableLayoutProjection();\n        this.unsubLayoutReady = visualElement.onLayoutUpdate(this.animate);\n        visualElement.layoutSafeToRemove = function () { return _this.safeToRemove(); };\n        addScaleCorrection(defaultScaleCorrectors);\n    };\n    Animate.prototype.componentWillUnmount = function () {\n        var _this = this;\n        this.unsubLayoutReady();\n        eachAxis(function (axis) { var _a, _b; return (_b = (_a = _this.stopAxisAnimation)[axis]) === null || _b === void 0 ? void 0 : _b.call(_a); });\n    };\n    /**\n     * TODO: This manually performs animations on the visualElement's layout progress\n     * values. It'd be preferable to amend the startLayoutAxisAnimation\n     * API to accept more custom animations like this.\n     */\n    Animate.prototype.animateAxis = function (axis, target, origin, _a) {\n        var _this = this;\n        var _b, _c;\n        var _d = _a === void 0 ? {} : _a, transition = _d.transition, isRelative = _d.isRelative;\n        /**\n         * If we're not animating to a new target, don't run this animation\n         */\n        if (this.isAnimating[axis] &&\n            axisIsEqual(target, this.currentAnimationTarget[axis])) {\n            return;\n        }\n        (_c = (_b = this.stopAxisAnimation)[axis]) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.isAnimating[axis] = true;\n        var visualElement = this.props.visualElement;\n        var frameTarget = this.frameTarget[axis];\n        var layoutProgress = visualElement.getProjectionAnimationProgress()[axis];\n        /**\n         * Set layout progress back to 0. We set it twice to hard-reset any velocity that might\n         * be re-incoporated into a subsequent spring animation.\n         */\n        layoutProgress.clearListeners();\n        layoutProgress.set(0);\n        layoutProgress.set(0);\n        /**\n         * Create an animation function to run once per frame. This will tween the visual bounding box from\n         * origin to target using the latest progress value.\n         */\n        var frame = function () {\n            // Convert the latest layoutProgress, which is a value from 0-1000, into a 0-1 progress\n            var p = layoutProgress.get() / progressTarget;\n            // Tween the axis and update the visualElement with the latest values\n            tweenAxis(frameTarget, origin, target, p);\n            visualElement.setProjectionTargetAxis(axis, frameTarget.min, frameTarget.max, isRelative);\n        };\n        // Synchronously run a frame to ensure there's no flash of the uncorrected bounding box.\n        frame();\n        // Create a function to stop animation on this specific axis\n        var unsubscribeProgress = layoutProgress.onChange(frame);\n        this.stopAxisAnimation[axis] = function () {\n            _this.isAnimating[axis] = false;\n            layoutProgress.stop();\n            unsubscribeProgress();\n        };\n        this.currentAnimationTarget[axis] = target;\n        var layoutTransition = transition ||\n            visualElement.getDefaultTransition() ||\n            defaultLayoutTransition;\n        // Start the animation on this axis\n        var animation = startAnimation(axis === \"x\" ? \"layoutX\" : \"layoutY\", layoutProgress, progressTarget, layoutTransition && getValueTransition(layoutTransition, \"layout\")).then(this.stopAxisAnimation[axis]);\n        return animation;\n    };\n    Animate.prototype.safeToRemove = function () {\n        var _a, _b;\n        (_b = (_a = this.props).safeToRemove) === null || _b === void 0 ? void 0 : _b.call(_a);\n    };\n    Animate.prototype.render = function () {\n        return null;\n    };\n    return Animate;\n}(React.Component));\nfunction AnimateLayoutContextProvider(props) {\n    var _a = __read(usePresence(), 2), safeToRemove = _a[1];\n    return React.createElement(Animate, __assign({}, props, { safeToRemove: safeToRemove }));\n}\nfunction hasMoved(a, b) {\n    return (!isZeroBox(a) &&\n        !isZeroBox(b) &&\n        (!axisIsEqual(a.x, b.x) || !axisIsEqual(a.y, b.y)));\n}\nvar zeroAxis = { min: 0, max: 0 };\nfunction isZeroBox(a) {\n    return axisIsEqual(a.x, zeroAxis) && axisIsEqual(a.y, zeroAxis);\n}\nfunction axisIsEqual(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nvar defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction isProvidedCorrectDataForRelativeSharedLayout(prevParent, originBox, targetBox) {\n    return prevParent || (!prevParent && !(originBox || targetBox));\n}\n\nexport { AnimateLayoutContextProvider };\n","import { __extends, __assign } from 'tslib';\nimport React__default, { useContext } from 'react';\nimport { isSharedLayout, SharedLayoutContext, FramerTreeLayoutContext } from '../../../context/SharedLayoutContext.js';\nimport { snapshotViewportBox } from '../../../render/dom/projection/utils.js';\n\n/**\n * This component is responsible for scheduling the measuring of the motion component\n */\nvar Measure = /** @class */ (function (_super) {\n    __extends(Measure, _super);\n    function Measure() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * If this is a child of a SyncContext, register the VisualElement with it on mount.\n     */\n    Measure.prototype.componentDidMount = function () {\n        var _a = this.props, syncLayout = _a.syncLayout, framerSyncLayout = _a.framerSyncLayout, visualElement = _a.visualElement;\n        isSharedLayout(syncLayout) && syncLayout.register(visualElement);\n        isSharedLayout(framerSyncLayout) &&\n            framerSyncLayout.register(visualElement);\n        visualElement.onUnmount(function () {\n            if (isSharedLayout(syncLayout)) {\n                syncLayout.remove(visualElement);\n            }\n            if (isSharedLayout(framerSyncLayout)) {\n                framerSyncLayout.remove(visualElement);\n            }\n        });\n    };\n    /**\n     * If this is a child of a SyncContext, notify it that it needs to re-render. It will then\n     * handle the snapshotting.\n     *\n     * If it is stand-alone component, add it to the batcher.\n     */\n    Measure.prototype.getSnapshotBeforeUpdate = function () {\n        var _a = this.props, syncLayout = _a.syncLayout, visualElement = _a.visualElement;\n        if (isSharedLayout(syncLayout)) {\n            syncLayout.syncUpdate();\n        }\n        else {\n            snapshotViewportBox(visualElement);\n            syncLayout.add(visualElement);\n        }\n        return null;\n    };\n    Measure.prototype.componentDidUpdate = function () {\n        var syncLayout = this.props.syncLayout;\n        if (!isSharedLayout(syncLayout))\n            syncLayout.flush();\n    };\n    Measure.prototype.render = function () {\n        return null;\n    };\n    return Measure;\n}(React__default.Component));\nfunction MeasureContextProvider(props) {\n    var syncLayout = useContext(SharedLayoutContext);\n    var framerSyncLayout = useContext(FramerTreeLayoutContext);\n    return (React__default.createElement(Measure, __assign({}, props, { syncLayout: syncLayout, framerSyncLayout: framerSyncLayout })));\n}\n\nexport { MeasureContextProvider };\n","import { AnimateLayoutContextProvider } from './Animate.js';\nimport { MeasureContextProvider } from './Measure.js';\n\nvar layoutAnimations = {\n    measureLayout: MeasureContextProvider,\n    layoutAnimation: AnimateLayoutContextProvider,\n};\n\nexport { layoutAnimations };\n","import { axisBox, delta } from '../../utils/geometry/index.js';\n\nvar createProjectionState = function () { return ({\n    isEnabled: false,\n    isHydrated: false,\n    isTargetLocked: false,\n    target: axisBox(),\n    targetFinal: axisBox(),\n}); };\nfunction createLayoutState() {\n    return {\n        isHydrated: false,\n        layout: axisBox(),\n        layoutCorrected: axisBox(),\n        treeScale: { x: 1, y: 1 },\n        delta: delta(),\n        deltaFinal: delta(),\n        deltaTransform: \"\",\n    };\n}\nvar zeroLayout = createLayoutState();\n\nexport { createLayoutState, createProjectionState, zeroLayout };\n","import { zeroLayout } from '../../utils/state.js';\n\n/**\n * Build a transform style that takes a calculated delta between the element's current\n * space on screen and projects it into the desired space.\n */\nfunction buildLayoutProjectionTransform(_a, treeScale, latestTransform) {\n    var x = _a.x, y = _a.y;\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    var xTranslate = x.translate / treeScale.x;\n    var yTranslate = y.translate / treeScale.y;\n    var transform = \"translate3d(\" + xTranslate + \"px, \" + yTranslate + \"px, 0) \";\n    if (latestTransform) {\n        var rotate = latestTransform.rotate, rotateX = latestTransform.rotateX, rotateY = latestTransform.rotateY;\n        if (rotate)\n            transform += \"rotate(\" + rotate + \") \";\n        if (rotateX)\n            transform += \"rotateX(\" + rotateX + \") \";\n        if (rotateY)\n            transform += \"rotateY(\" + rotateY + \") \";\n    }\n    transform += \"scale(\" + x.scale + \", \" + y.scale + \")\";\n    return !latestTransform && transform === identityProjection ? \"\" : transform;\n}\n/**\n * Take the calculated delta origin and apply it as a transform string.\n */\nfunction buildLayoutProjectionTransformOrigin(_a) {\n    var deltaFinal = _a.deltaFinal;\n    return deltaFinal.x.origin * 100 + \"% \" + deltaFinal.y.origin * 100 + \"% 0\";\n}\nvar identityProjection = buildLayoutProjectionTransform(zeroLayout.delta, zeroLayout.treeScale, { x: 1, y: 1 });\n\nexport { buildLayoutProjectionTransform, buildLayoutProjectionTransformOrigin, identityProjection };\n","import { __spreadArray, __read } from 'tslib';\nimport { SubscriptionManager } from '../../utils/subscription-manager.js';\n\nvar names = [\n    \"LayoutMeasure\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutUpdate\",\n    \"ViewportBoxUpdate\",\n    \"Update\",\n    \"Render\",\n    \"AnimationComplete\",\n    \"LayoutAnimationComplete\",\n    \"AnimationStart\",\n    \"SetAxisTarget\",\n    \"Unmount\",\n];\nfunction createLifecycles() {\n    var managers = names.map(function () { return new SubscriptionManager(); });\n    var propSubscriptions = {};\n    var lifecycles = {\n        clearAllListeners: function () { return managers.forEach(function (manager) { return manager.clear(); }); },\n        updatePropListeners: function (props) {\n            return names.forEach(function (name) {\n                var _a;\n                (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions);\n                var on = \"on\" + name;\n                var propListener = props[on];\n                if (propListener) {\n                    propSubscriptions[name] = lifecycles[on](propListener);\n                }\n            });\n        },\n    };\n    managers.forEach(function (manager, i) {\n        lifecycles[\"on\" + names[i]] = function (handler) { return manager.add(handler); };\n        lifecycles[\"notify\" + names[i]] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return manager.notify.apply(manager, __spreadArray([], __read(args)));\n        };\n    });\n    return lifecycles;\n}\n\nexport { createLifecycles };\n","import { addUniqueItem, removeItem } from '../../utils/array.js';\nimport { compareByDepth } from './compare-by-depth.js';\n\nvar FlatTree = /** @class */ (function () {\n    function FlatTree() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    FlatTree.prototype.add = function (child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    };\n    FlatTree.prototype.remove = function (child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    };\n    FlatTree.prototype.forEach = function (callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    };\n    return FlatTree;\n}());\n\nexport { FlatTree };\n","import { __assign, __spreadArray, __read } from 'tslib';\nimport sync, { cancelSync } from 'framesync';\nimport { pipe } from 'popmotion';\nimport { Presence } from '../components/AnimateSharedLayout/types.js';\nimport { eachAxis } from '../utils/each-axis.js';\nimport { axisBox } from '../utils/geometry/index.js';\nimport { removeBoxTransforms, applyBoxTransforms } from '../utils/geometry/delta-apply.js';\nimport { calcRelativeBox, updateBoxDelta } from '../utils/geometry/delta-calc.js';\nimport { motionValue } from '../value/index.js';\nimport { isMotionValue } from '../value/utils/is-motion-value.js';\nimport { buildLayoutProjectionTransform } from './html/utils/build-projection-transform.js';\nimport { variantPriorityOrder } from './utils/animation-state.js';\nimport { createLifecycles } from './utils/lifecycles.js';\nimport { updateMotionValuesFromProps } from './utils/motion-values.js';\nimport { updateLayoutDeltas } from './utils/projection.js';\nimport { createLayoutState, createProjectionState } from './utils/state.js';\nimport { FlatTree } from './utils/flat-tree.js';\nimport { checkIfControllingVariants, checkIfVariantNode, isVariantLabel } from './utils/variants.js';\nimport { setCurrentViewportBox } from './dom/projection/relative-set.js';\nimport { isDraggable } from './utils/is-draggable.js';\n\nvar visualElement = function (_a) {\n    var _b = _a.treeType, treeType = _b === void 0 ? \"\" : _b, build = _a.build, getBaseTarget = _a.getBaseTarget, makeTargetAnimatable = _a.makeTargetAnimatable, measureViewportBox = _a.measureViewportBox, renderInstance = _a.render, readValueFromInstance = _a.readValueFromInstance, resetTransform = _a.resetTransform, restoreTransform = _a.restoreTransform, removeValueFromRenderState = _a.removeValueFromRenderState, sortNodePosition = _a.sortNodePosition, scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps;\n    return function (_a, options) {\n        var parent = _a.parent, props = _a.props, presenceId = _a.presenceId, blockInitialAnimation = _a.blockInitialAnimation, visualState = _a.visualState;\n        if (options === void 0) { options = {}; }\n        var latestValues = visualState.latestValues, renderState = visualState.renderState;\n        /**\n         * The instance of the render-specific node that will be hydrated by the\n         * exposed React ref. So for example, this visual element can host a\n         * HTMLElement, plain object, or Three.js object. The functions provided\n         * in VisualElementConfig allow us to interface with this instance.\n         */\n        var instance;\n        /**\n         * Manages the subscriptions for a visual element's lifecycle, for instance\n         * onRender and onViewportBoxUpdate.\n         */\n        var lifecycles = createLifecycles();\n        /**\n         *\n         */\n        var projection = createProjectionState();\n        /**\n         * A reference to the nearest projecting parent. This is either\n         * undefined if we haven't looked for the nearest projecting parent,\n         * false if there is no parent performing layout projection, or a reference\n         * to the projecting parent.\n         */\n        var projectionParent;\n        /**\n         * This is a reference to the visual state of the \"lead\" visual element.\n         * Usually, this will be this visual element. But if it shares a layoutId\n         * with other visual elements, only one of them will be designated lead by\n         * AnimateSharedLayout. All the other visual elements will take on the visual\n         * appearance of the lead while they crossfade to it.\n         */\n        var leadProjection = projection;\n        var leadLatestValues = latestValues;\n        var unsubscribeFromLeadVisualElement;\n        /**\n         * The latest layout measurements and calculated projections. This\n         * is seperate from the target projection data in visualState as\n         * many visual elements might point to the same piece of visualState as\n         * a target, whereas they might each have different layouts and thus\n         * projection calculations needed to project into the same viewport box.\n         */\n        var layoutState = createLayoutState();\n        /**\n         *\n         */\n        var crossfader;\n        /**\n         * Keep track of whether the viewport box has been updated since the\n         * last time the layout projection was re-calculated.\n         */\n        var hasViewportBoxUpdated = false;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        var values = new Map();\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        var valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        var prevMotionValues = {};\n        /**\n         * x/y motion values that track the progress of initiated layout\n         * animations.\n         *\n         * TODO: Target for removal\n         */\n        var projectionTargetProgress;\n        /**\n         * When values are removed from all animation props we need to search\n         * for a fallback value to animate to. These values are tracked in baseTarget.\n         */\n        var baseTarget = __assign({}, latestValues);\n        // Internal methods ========================\n        /**\n         * On mount, this will be hydrated with a callback to disconnect\n         * this visual element from its parent on unmount.\n         */\n        var removeFromVariantTree;\n        /**\n         *\n         */\n        function render() {\n            if (!instance)\n                return;\n            if (element.isProjectionReady()) {\n                /**\n                 * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n                 * This is the final box that we will then project into by calculating a transform delta and\n                 * applying it to the corrected box.\n                 */\n                applyBoxTransforms(leadProjection.targetFinal, leadProjection.target, leadLatestValues);\n                /**\n                 * Update the delta between the corrected box and the final target box, after\n                 * user-set transforms are applied to it. This will be used by the renderer to\n                 * create a transform style that will reproject the element from its actual layout\n                 * into the desired bounding box.\n                 */\n                updateBoxDelta(layoutState.deltaFinal, layoutState.layoutCorrected, leadProjection.targetFinal, latestValues);\n            }\n            triggerBuild();\n            renderInstance(instance, renderState);\n        }\n        function triggerBuild() {\n            var valuesToRender = latestValues;\n            if (crossfader && crossfader.isActive()) {\n                var crossfadedValues = crossfader.getCrossfadeState(element);\n                if (crossfadedValues)\n                    valuesToRender = crossfadedValues;\n            }\n            build(element, renderState, valuesToRender, leadProjection, layoutState, options, props);\n        }\n        function update() {\n            lifecycles.notifyUpdate(latestValues);\n        }\n        function updateLayoutProjection() {\n            if (!element.isProjectionReady())\n                return;\n            var delta = layoutState.delta, treeScale = layoutState.treeScale;\n            var prevTreeScaleX = treeScale.x;\n            var prevTreeScaleY = treeScale.y;\n            var prevDeltaTransform = layoutState.deltaTransform;\n            updateLayoutDeltas(layoutState, leadProjection, element.path, latestValues);\n            hasViewportBoxUpdated &&\n                element.notifyViewportBoxUpdate(leadProjection.target, delta);\n            hasViewportBoxUpdated = false;\n            var deltaTransform = buildLayoutProjectionTransform(delta, treeScale);\n            if (deltaTransform !== prevDeltaTransform ||\n                // Also compare calculated treeScale, for values that rely on this only for scale correction\n                prevTreeScaleX !== treeScale.x ||\n                prevTreeScaleY !== treeScale.y) {\n                element.scheduleRender();\n            }\n            layoutState.deltaTransform = deltaTransform;\n        }\n        function updateTreeLayoutProjection() {\n            element.layoutTree.forEach(fireUpdateLayoutProjection);\n        }\n        /**\n         *\n         */\n        function bindToMotionValue(key, value) {\n            var removeOnChange = value.onChange(function (latestValue) {\n                latestValues[key] = latestValue;\n                props.onUpdate && sync.update(update, false, true);\n            });\n            var removeOnRenderRequest = value.onRenderRequest(element.scheduleRender);\n            valueSubscriptions.set(key, function () {\n                removeOnChange();\n                removeOnRenderRequest();\n            });\n        }\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        var initialMotionValues = scrapeMotionValuesFromProps(props);\n        for (var key in initialMotionValues) {\n            var value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        var isControllingVariants = checkIfControllingVariants(props);\n        var isVariantNode = checkIfVariantNode(props);\n        var element = __assign(__assign({ treeType: treeType, \n            /**\n             * This is a mirror of the internal instance prop, which keeps\n             * VisualElement type-compatible with React's RefObject.\n             */\n            current: null, \n            /**\n             * The depth of this visual element within the visual element tree.\n             */\n            depth: parent ? parent.depth + 1 : 0, parent: parent, children: new Set(), \n            /**\n             * An ancestor path back to the root visual element. This is used\n             * by layout projection to quickly recurse back up the tree.\n             */\n            path: parent ? __spreadArray(__spreadArray([], __read(parent.path)), [parent]) : [], layoutTree: parent ? parent.layoutTree : new FlatTree(), \n            /**\n             *\n             */\n            presenceId: presenceId,\n            projection: projection, \n            /**\n             * If this component is part of the variant tree, it should track\n             * any children that are also part of the tree. This is essentially\n             * a shadow tree to simplify logic around how to stagger over children.\n             */\n            variantChildren: isVariantNode ? new Set() : undefined, \n            /**\n             * Whether this instance is visible. This can be changed imperatively\n             * by AnimateSharedLayout, is analogous to CSS's visibility in that\n             * hidden elements should take up layout, and needs enacting by the configured\n             * render function.\n             */\n            isVisible: undefined, \n            /**\n             * Normally, if a component is controlled by a parent's variants, it can\n             * rely on that ancestor to trigger animations further down the tree.\n             * However, if a component is created after its parent is mounted, the parent\n             * won't trigger that mount animation so the child needs to.\n             *\n             * TODO: This might be better replaced with a method isParentMounted\n             */\n            manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()), \n            /**\n             * This can be set by AnimatePresence to force components that mount\n             * at the same time as it to mount as if they have initial={false} set.\n             */\n            blockInitialAnimation: blockInitialAnimation, \n            /**\n             * Determine whether this component has mounted yet. This is mostly used\n             * by variant children to determine whether they need to trigger their\n             * own animations on mount.\n             */\n            isMounted: function () { return Boolean(instance); }, mount: function (newInstance) {\n                instance = element.current = newInstance;\n                element.pointTo(element);\n                if (isVariantNode && parent && !isControllingVariants) {\n                    removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);\n                }\n                parent === null || parent === void 0 ? void 0 : parent.children.add(element);\n            },\n            /**\n             *\n             */\n            unmount: function () {\n                cancelSync.update(update);\n                cancelSync.render(render);\n                cancelSync.preRender(element.updateLayoutProjection);\n                valueSubscriptions.forEach(function (remove) { return remove(); });\n                element.stopLayoutAnimation();\n                element.layoutTree.remove(element);\n                removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();\n                parent === null || parent === void 0 ? void 0 : parent.children.delete(element);\n                unsubscribeFromLeadVisualElement === null || unsubscribeFromLeadVisualElement === void 0 ? void 0 : unsubscribeFromLeadVisualElement();\n                lifecycles.clearAllListeners();\n            },\n            /**\n             * Add a child visual element to our set of children.\n             */\n            addVariantChild: function (child) {\n                var _a;\n                var closestVariantNode = element.getClosestVariantNode();\n                if (closestVariantNode) {\n                    (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n                    return function () { return closestVariantNode.variantChildren.delete(child); };\n                }\n            },\n            sortNodePosition: function (other) {\n                /**\n                 * If these nodes aren't even of the same type we can't compare their depth.\n                 */\n                if (!sortNodePosition || treeType !== other.treeType)\n                    return 0;\n                return sortNodePosition(element.getInstance(), other.getInstance());\n            }, \n            /**\n             * Returns the closest variant node in the tree starting from\n             * this visual element.\n             */\n            getClosestVariantNode: function () {\n                return isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode();\n            }, \n            /**\n             * A method that schedules an update to layout projections throughout\n             * the tree. We inherit from the parent so there's only ever one\n             * job scheduled on the next frame - that of the root visual element.\n             */\n            scheduleUpdateLayoutProjection: parent\n                ? parent.scheduleUpdateLayoutProjection\n                : function () {\n                    return sync.preRender(element.updateTreeLayoutProjection, false, true);\n                }, \n            /**\n             * Expose the latest layoutId prop.\n             */\n            getLayoutId: function () { return props.layoutId; }, \n            /**\n             * Returns the current instance.\n             */\n            getInstance: function () { return instance; }, \n            /**\n             * Get/set the latest static values.\n             */\n            getStaticValue: function (key) { return latestValues[key]; }, setStaticValue: function (key, value) { return (latestValues[key] = value); }, \n            /**\n             * Returns the latest motion value state. Currently only used to take\n             * a snapshot of the visual element - perhaps this can return the whole\n             * visual state\n             */\n            getLatestValues: function () { return latestValues; }, \n            /**\n             * Set the visiblity of the visual element. If it's changed, schedule\n             * a render to reflect these changes.\n             */\n            setVisibility: function (visibility) {\n                if (element.isVisible === visibility)\n                    return;\n                element.isVisible = visibility;\n                element.scheduleRender();\n            },\n            /**\n             * Make a target animatable by Popmotion. For instance, if we're\n             * trying to animate width from 100px to 100vw we need to measure 100vw\n             * in pixels to determine what we really need to animate to. This is also\n             * pluggable to support Framer's custom value types like Color,\n             * and CSS variables.\n             */\n            makeTargetAnimatable: function (target, canMutate) {\n                if (canMutate === void 0) { canMutate = true; }\n                return makeTargetAnimatable(element, target, props, canMutate);\n            },\n            // Motion values ========================\n            /**\n             * Add a motion value and bind it to this visual element.\n             */\n            addValue: function (key, value) {\n                // Remove existing value if it exists\n                if (element.hasValue(key))\n                    element.removeValue(key);\n                values.set(key, value);\n                latestValues[key] = value.get();\n                bindToMotionValue(key, value);\n            },\n            /**\n             * Remove a motion value and unbind any active subscriptions.\n             */\n            removeValue: function (key) {\n                var _a;\n                values.delete(key);\n                (_a = valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n                valueSubscriptions.delete(key);\n                delete latestValues[key];\n                removeValueFromRenderState(key, renderState);\n            }, \n            /**\n             * Check whether we have a motion value for this key\n             */\n            hasValue: function (key) { return values.has(key); }, \n            /**\n             * Get a motion value for this key. If called with a default\n             * value, we'll create one if none exists.\n             */\n            getValue: function (key, defaultValue) {\n                var value = values.get(key);\n                if (value === undefined && defaultValue !== undefined) {\n                    value = motionValue(defaultValue);\n                    element.addValue(key, value);\n                }\n                return value;\n            }, \n            /**\n             * Iterate over our motion values.\n             */\n            forEachValue: function (callback) { return values.forEach(callback); }, \n            /**\n             * If we're trying to animate to a previously unencountered value,\n             * we need to check for it in our state and as a last resort read it\n             * directly from the instance (which might have performance implications).\n             */\n            readValue: function (key) { var _a; return (_a = latestValues[key]) !== null && _a !== void 0 ? _a : readValueFromInstance(instance, key, options); }, \n            /**\n             * Set the base target to later animate back to. This is currently\n             * only hydrated on creation and when we first read a value.\n             */\n            setBaseTarget: function (key, value) {\n                baseTarget[key] = value;\n            },\n            /**\n             * Find the base target for a value thats been removed from all animation\n             * props.\n             */\n            getBaseTarget: function (key) {\n                if (getBaseTarget) {\n                    var target = getBaseTarget(props, key);\n                    if (target !== undefined && !isMotionValue(target))\n                        return target;\n                }\n                return baseTarget[key];\n            } }, lifecycles), { \n            /**\n             * Build the renderer state based on the latest visual state.\n             */\n            build: function () {\n                triggerBuild();\n                return renderState;\n            },\n            /**\n             * Schedule a render on the next animation frame.\n             */\n            scheduleRender: function () {\n                sync.render(render, false, true);\n            }, \n            /**\n             * Synchronously fire render. It's prefered that we batch renders but\n             * in many circumstances, like layout measurement, we need to run this\n             * synchronously. However in those instances other measures should be taken\n             * to batch reads/writes.\n             */\n            syncRender: render, \n            /**\n             * Update the provided props. Ensure any newly-added motion values are\n             * added to our map, old ones removed, and listeners updated.\n             */\n            setProps: function (newProps) {\n                props = newProps;\n                lifecycles.updatePropListeners(newProps);\n                prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps(props), prevMotionValues);\n            }, getProps: function () { return props; }, \n            // Variants ==============================\n            /**\n             * Returns the variant definition with a given name.\n             */\n            getVariant: function (name) { var _a; return (_a = props.variants) === null || _a === void 0 ? void 0 : _a[name]; }, \n            /**\n             * Returns the defined default transition on this component.\n             */\n            getDefaultTransition: function () { return props.transition; }, \n            /**\n             * Used by child variant nodes to get the closest ancestor variant props.\n             */\n            getVariantContext: function (startAtParent) {\n                if (startAtParent === void 0) { startAtParent = false; }\n                if (startAtParent)\n                    return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();\n                if (!isControllingVariants) {\n                    var context_1 = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};\n                    if (props.initial !== undefined) {\n                        context_1.initial = props.initial;\n                    }\n                    return context_1;\n                }\n                var context = {};\n                for (var i = 0; i < numVariantProps; i++) {\n                    var name_1 = variantProps[i];\n                    var prop = props[name_1];\n                    if (isVariantLabel(prop) || prop === false) {\n                        context[name_1] = prop;\n                    }\n                }\n                return context;\n            },\n            // Layout projection ==============================\n            /**\n             * Enable layout projection for this visual element. Won't actually\n             * occur until we also have hydrated layout measurements.\n             */\n            enableLayoutProjection: function () {\n                projection.isEnabled = true;\n                element.layoutTree.add(element);\n            },\n            /**\n             * Lock the projection target, for instance when dragging, so\n             * nothing else can try and animate it.\n             */\n            lockProjectionTarget: function () {\n                projection.isTargetLocked = true;\n            },\n            unlockProjectionTarget: function () {\n                element.stopLayoutAnimation();\n                projection.isTargetLocked = false;\n            }, getLayoutState: function () { return layoutState; }, setCrossfader: function (newCrossfader) {\n                crossfader = newCrossfader;\n            }, isProjectionReady: function () {\n                return projection.isEnabled &&\n                    projection.isHydrated &&\n                    layoutState.isHydrated;\n            }, \n            /**\n             * Start a layout animation on a given axis.\n             */\n            startLayoutAnimation: function (axis, transition, isRelative) {\n                if (isRelative === void 0) { isRelative = false; }\n                var progress = element.getProjectionAnimationProgress()[axis];\n                var _a = isRelative\n                    ? projection.relativeTarget[axis]\n                    : projection.target[axis], min = _a.min, max = _a.max;\n                var length = max - min;\n                progress.clearListeners();\n                progress.set(min);\n                progress.set(min); // Set twice to hard-reset velocity\n                progress.onChange(function (v) {\n                    element.setProjectionTargetAxis(axis, v, v + length, isRelative);\n                });\n                return element.animateMotionValue(axis, progress, 0, transition);\n            },\n            /**\n             * Stop layout animations.\n             */\n            stopLayoutAnimation: function () {\n                eachAxis(function (axis) {\n                    return element.getProjectionAnimationProgress()[axis].stop();\n                });\n            },\n            /**\n             * Measure the current viewport box with or without transforms.\n             * Only measures axis-aligned boxes, rotate and skew must be manually\n             * removed with a re-render to work.\n             */\n            measureViewportBox: function (withTransform) {\n                if (withTransform === void 0) { withTransform = true; }\n                var viewportBox = measureViewportBox(instance, options);\n                if (!withTransform)\n                    removeBoxTransforms(viewportBox, latestValues);\n                return viewportBox;\n            },\n            /**\n             * Get the motion values tracking the layout animations on each\n             * axis. Lazy init if not already created.\n             */\n            getProjectionAnimationProgress: function () {\n                projectionTargetProgress || (projectionTargetProgress = {\n                    x: motionValue(0),\n                    y: motionValue(0),\n                });\n                return projectionTargetProgress;\n            },\n            /**\n             * Update the projection of a single axis. Schedule an update to\n             * the tree layout projection.\n             */\n            setProjectionTargetAxis: function (axis, min, max, isRelative) {\n                if (isRelative === void 0) { isRelative = false; }\n                var target;\n                if (isRelative) {\n                    if (!projection.relativeTarget) {\n                        projection.relativeTarget = axisBox();\n                    }\n                    target = projection.relativeTarget[axis];\n                }\n                else {\n                    projection.relativeTarget = undefined;\n                    target = projection.target[axis];\n                }\n                projection.isHydrated = true;\n                target.min = min;\n                target.max = max;\n                // Flag that we want to fire the onViewportBoxUpdate event handler\n                hasViewportBoxUpdated = true;\n                lifecycles.notifySetAxisTarget();\n            },\n            /**\n             * Rebase the projection target on top of the provided viewport box\n             * or the measured layout. This ensures that non-animating elements\n             * don't fall out of sync differences in measurements vs projections\n             * after a page scroll or other relayout.\n             */\n            rebaseProjectionTarget: function (force, box) {\n                if (box === void 0) { box = layoutState.layout; }\n                var _a = element.getProjectionAnimationProgress(), x = _a.x, y = _a.y;\n                var shouldRebase = !projection.relativeTarget &&\n                    !projection.isTargetLocked &&\n                    !x.isAnimating() &&\n                    !y.isAnimating();\n                if (force || shouldRebase) {\n                    eachAxis(function (axis) {\n                        var _a = box[axis], min = _a.min, max = _a.max;\n                        element.setProjectionTargetAxis(axis, min, max);\n                    });\n                }\n            },\n            /**\n             * Notify the visual element that its layout is up-to-date.\n             * Currently Animate.tsx uses this to check whether a layout animation\n             * needs to be performed.\n             */\n            notifyLayoutReady: function (config) {\n                setCurrentViewportBox(element);\n                element.notifyLayoutUpdate(layoutState.layout, element.prevViewportBox || layoutState.layout, config);\n            }, \n            /**\n             * Temporarily reset the transform of the instance.\n             */\n            resetTransform: function () { return resetTransform(element, instance, props); }, restoreTransform: function () { return restoreTransform(instance, renderState); }, updateLayoutProjection: updateLayoutProjection,\n            updateTreeLayoutProjection: function () {\n                element.layoutTree.forEach(fireResolveRelativeTargetBox);\n                /**\n                 * Schedule the projection updates at the end of the current preRender\n                 * step. This will ensure that all layout trees will first resolve\n                 * relative projection boxes into viewport boxes, and *then*\n                 * update projections.\n                 */\n                sync.preRender(updateTreeLayoutProjection, false, true);\n                // sync.postRender(() => element.scheduleUpdateLayoutProjection())\n            },\n            getProjectionParent: function () {\n                if (projectionParent === undefined) {\n                    var foundParent = false;\n                    // Search backwards through the tree path\n                    for (var i = element.path.length - 1; i >= 0; i--) {\n                        var ancestor = element.path[i];\n                        if (ancestor.projection.isEnabled) {\n                            foundParent = ancestor;\n                            break;\n                        }\n                    }\n                    projectionParent = foundParent;\n                }\n                return projectionParent;\n            },\n            resolveRelativeTargetBox: function () {\n                var relativeParent = element.getProjectionParent();\n                if (!projection.relativeTarget || !relativeParent)\n                    return;\n                calcRelativeBox(projection, relativeParent.projection);\n                if (isDraggable(relativeParent)) {\n                    var target = projection.target;\n                    applyBoxTransforms(target, target, relativeParent.getLatestValues());\n                }\n            },\n            shouldResetTransform: function () {\n                return Boolean(props._layoutResetTransform);\n            },\n            /**\n             *\n             */\n            pointTo: function (newLead) {\n                leadProjection = newLead.projection;\n                leadLatestValues = newLead.getLatestValues();\n                /**\n                 * Subscribe to lead component's layout animations\n                 */\n                unsubscribeFromLeadVisualElement === null || unsubscribeFromLeadVisualElement === void 0 ? void 0 : unsubscribeFromLeadVisualElement();\n                unsubscribeFromLeadVisualElement = pipe(newLead.onSetAxisTarget(element.scheduleUpdateLayoutProjection), newLead.onLayoutAnimationComplete(function () {\n                    var _a;\n                    if (element.isPresent) {\n                        element.presence = Presence.Present;\n                    }\n                    else {\n                        (_a = element.layoutSafeToRemove) === null || _a === void 0 ? void 0 : _a.call(element);\n                    }\n                }));\n            }, \n            // TODO: Clean this up\n            isPresent: true, presence: Presence.Entering });\n        return element;\n    };\n};\nfunction fireResolveRelativeTargetBox(child) {\n    child.resolveRelativeTargetBox();\n}\nfunction fireUpdateLayoutProjection(child) {\n    child.updateLayoutProjection();\n}\nvar variantProps = __spreadArray([\"initial\"], __read(variantPriorityOrder));\nvar numVariantProps = variantProps.length;\n\nexport { visualElement };\n","import { motionValue } from '../../value/index.js';\nimport { isMotionValue } from '../../value/utils/is-motion-value.js';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    var _a;\n    for (var key in next) {\n        var nextValue = next[key];\n        var prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping to a new motion value, create a new motion value\n             * from that\n             */\n            element.addValue(key, motionValue(nextValue));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                var existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (var key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { calcRelativeOffset } from '../../../motion/features/layout/utils.js';\nimport { eachAxis } from '../../../utils/each-axis.js';\n\nfunction setCurrentViewportBox(visualElement) {\n    var projectionParent = visualElement.getProjectionParent();\n    if (!projectionParent) {\n        visualElement.rebaseProjectionTarget();\n        return;\n    }\n    var relativeOffset = calcRelativeOffset(projectionParent.getLayoutState().layout, visualElement.getLayoutState().layout);\n    eachAxis(function (axis) {\n        visualElement.setProjectionTargetAxis(axis, relativeOffset[axis].min, relativeOffset[axis].max, true);\n    });\n}\n\nexport { setCurrentViewportBox };\n","import { resetBox, applyTreeDeltas } from '../../utils/geometry/delta-apply.js';\nimport { updateBoxDelta } from '../../utils/geometry/delta-calc.js';\n\nfunction updateLayoutDeltas(_a, _b, treePath, transformOrigin) {\n    var delta = _a.delta, layout = _a.layout, layoutCorrected = _a.layoutCorrected, treeScale = _a.treeScale;\n    var target = _b.target;\n    /**\n     * Reset the corrected box with the latest values from box, as we're then going\n     * to perform mutative operations on it.\n     */\n    resetBox(layoutCorrected, layout);\n    /**\n     * Apply all the parent deltas to this box to produce the corrected box. This\n     * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n     */\n    applyTreeDeltas(layoutCorrected, treeScale, treePath);\n    /**\n     * Update the delta between the corrected box and the target box before user-set transforms were applied.\n     * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n     * for our layout reprojection, but still allow them to be scaled correctly by the user.\n     * It might be that to simplify this we may want to accept that user-set scale is also corrected\n     * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n     * to allow people to choose whether these styles are corrected based on just the\n     * layout reprojection or the final bounding box.\n     */\n    updateBoxDelta(delta, layoutCorrected, target, transformOrigin);\n}\n\nexport { updateLayoutDeltas };\n","import { __assign, __read } from 'tslib';\nimport { number, px } from 'style-value-types';\nimport { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.js';\nimport { invariant } from 'hey-listen';\nimport { transformProps } from '../../html/utils/transform.js';\nimport { findDimensionValueType } from '../value-types/dimensions.js';\n\nvar positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nvar isPositionalKey = function (key) { return positionalKeys.has(key); };\nvar hasPositionalKey = function (target) {\n    return Object.keys(target).some(isPositionalKey);\n};\nvar setAndResetVelocity = function (value, to) {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nvar isNumOrPxType = function (v) {\n    return v === number || v === px;\n};\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nvar getPosFromMatrix = function (matrix, pos) {\n    return parseFloat(matrix.split(\", \")[pos]);\n};\nvar getTranslateFromMatrix = function (pos2, pos3) { return function (_bbox, _a) {\n    var transform = _a.transform;\n    if (transform === \"none\" || !transform)\n        return 0;\n    var matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        var matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n}; };\nvar transformKeys = new Set([\"x\", \"y\", \"z\"]);\nvar nonTranslationalTransformKeys = transformProps.filter(function (key) { return !transformKeys.has(key); });\nfunction removeNonTranslationalTransform(visualElement) {\n    var removedTransforms = [];\n    nonTranslationalTransformKeys.forEach(function (key) {\n        var value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.syncRender();\n    return removedTransforms;\n}\nvar positionalValues = {\n    // Dimensions\n    width: function (_a) {\n        var x = _a.x;\n        return x.max - x.min;\n    },\n    height: function (_a) {\n        var y = _a.y;\n        return y.max - y.min;\n    },\n    top: function (_bbox, _a) {\n        var top = _a.top;\n        return parseFloat(top);\n    },\n    left: function (_bbox, _a) {\n        var left = _a.left;\n        return parseFloat(left);\n    },\n    bottom: function (_a, _b) {\n        var y = _a.y;\n        var top = _b.top;\n        return parseFloat(top) + (y.max - y.min);\n    },\n    right: function (_a, _b) {\n        var x = _a.x;\n        var left = _b.left;\n        return parseFloat(left) + (x.max - x.min);\n    },\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nvar convertChangedValueTypes = function (target, visualElement, changedKeys) {\n    var originBbox = visualElement.measureViewportBox();\n    var element = visualElement.getInstance();\n    var elementComputedStyle = getComputedStyle(element);\n    var display = elementComputedStyle.display, top = elementComputedStyle.top, left = elementComputedStyle.left, bottom = elementComputedStyle.bottom, right = elementComputedStyle.right, transform = elementComputedStyle.transform;\n    var originComputedStyle = { top: top, left: left, bottom: bottom, right: right, transform: transform };\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.syncRender();\n    var targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach(function (key) {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        var value = visualElement.getValue(key);\n        setAndResetVelocity(value, positionalValues[key](originBbox, originComputedStyle));\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nvar checkAndConvertChangedValueTypes = function (visualElement, target, origin, transitionEnd) {\n    if (origin === void 0) { origin = {}; }\n    if (transitionEnd === void 0) { transitionEnd = {}; }\n    target = __assign({}, target);\n    transitionEnd = __assign({}, transitionEnd);\n    var targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    var removedTransformValues = [];\n    var hasAttemptedToRemoveTransformValues = false;\n    var changedValueTypeKeys = [];\n    targetPositionalKeys.forEach(function (key) {\n        var value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        var from = origin[key];\n        var to = target[key];\n        var fromType = findDimensionValueType(from);\n        var toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            var numKeyframes = to.length;\n            for (var i = to[0] === null ? 1 : 0; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                var current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues = removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        var convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(function (_a) {\n                var _b = __read(_a, 2), key = _b[0], value = _b[1];\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.syncRender();\n        return { target: convertedTarget, transitionEnd: transitionEnd };\n    }\n    else {\n        return { target: target, transitionEnd: transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target: target, transitionEnd: transitionEnd };\n}\n\nexport { BoundingBoxDimension, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.js';\nimport { unitConversion } from './unit-conversion.js';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nvar parseDomVariant = function (visualElement, target, origin, transitionEnd) {\n    var resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","import { __rest, __assign } from 'tslib';\nimport { visualElement } from '../index.js';\nimport { getOrigin, checkTargetForNewValues } from '../utils/setters.js';\nimport { getBoundingBox } from '../dom/projection/measure.js';\nimport { buildHTMLStyles } from './utils/build-styles.js';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.js';\nimport { parseDomVariant } from '../dom/utils/parse-dom-variant.js';\nimport { isTransformProp } from './utils/transform.js';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\nimport { renderHTML } from './utils/render.js';\nimport { getDefaultValueType } from '../dom/value-types/defaults.js';\nimport { buildLayoutProjectionTransformOrigin, buildLayoutProjectionTransform } from './utils/build-projection-transform.js';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nvar htmlConfig = {\n    treeType: \"dom\",\n    readValueFromInstance: function (domElement, key) {\n        if (isTransformProp(key)) {\n            var defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            var computedStyle = getComputedStyle(domElement);\n            return ((isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0);\n        }\n    },\n    sortNodePosition: function (a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    },\n    getBaseTarget: function (props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    },\n    measureViewportBox: function (element, _a) {\n        var transformPagePoint = _a.transformPagePoint;\n        return getBoundingBox(element, transformPagePoint);\n    },\n    /**\n     * Reset the transform on the current Element. This is called as part\n     * of a batched process across the entire layout tree. To remove this write\n     * cycle it'd be interesting to see if it's possible to \"undo\" all the current\n     * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\n     * works\n     */\n    resetTransform: function (element, domElement, props) {\n        var transformTemplate = props.transformTemplate;\n        domElement.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        // Ensure that whatever happens next, we restore our transform on the next frame\n        element.scheduleRender();\n    },\n    restoreTransform: function (instance, mutableState) {\n        instance.style.transform = mutableState.style.transform;\n    },\n    removeValueFromRenderState: function (key, _a) {\n        var vars = _a.vars, style = _a.style;\n        delete vars[key];\n        delete style[key];\n    },\n    /**\n     * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\n     * can be animated by Motion.\n     */\n    makeTargetAnimatable: function (element, _a, _b, isMounted) {\n        var transformValues = _b.transformValues;\n        if (isMounted === void 0) { isMounted = true; }\n        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, [\"transition\", \"transitionEnd\"]);\n        var origin = getOrigin(target, transition || {}, element);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(element, target, origin);\n            var parsed = parseDomVariant(element, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return __assign({ transition: transition,\n            transitionEnd: transitionEnd }, target);\n    },\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    build: function (element, renderState, latestValues, projection, layoutState, options, props) {\n        if (element.isVisible !== undefined) {\n            renderState.style.visibility = element.isVisible\n                ? \"visible\"\n                : \"hidden\";\n        }\n        var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\n        buildHTMLStyles(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : undefined, isProjectionTranform\n            ? buildLayoutProjectionTransformOrigin\n            : undefined);\n    },\n    render: renderHTML,\n};\nvar htmlVisualElement = visualElement(htmlConfig);\n\nexport { getComputedStyle, htmlConfig, htmlVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nvar isNumericalString = function (v) { return /^\\-?\\d*\\.?\\d+$/.test(v); };\n\nexport { isNumericalString };\n","import { __assign } from 'tslib';\nimport { visualElement } from '../index.js';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\nimport { htmlConfig } from '../html/visual-element.js';\nimport { buildSVGAttrs } from './utils/build-attrs.js';\nimport { camelToDash } from '../dom/utils/camel-to-dash.js';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.js';\nimport { isTransformProp } from '../html/utils/transform.js';\nimport { renderSVG } from './utils/render.js';\nimport { getDefaultValueType } from '../dom/value-types/defaults.js';\nimport { buildLayoutProjectionTransformOrigin, buildLayoutProjectionTransform } from '../html/utils/build-projection-transform.js';\n\nvar svgVisualElement = visualElement(__assign(__assign({}, htmlConfig), { getBaseTarget: function (props, key) {\n        return props[key];\n    },\n    readValueFromInstance: function (domElement, key) {\n        var _a;\n        if (isTransformProp(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return domElement.getAttribute(key);\n    },\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    build: function (_element, renderState, latestValues, projection, layoutState, options, props) {\n        var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\n        buildSVGAttrs(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : undefined, isProjectionTranform\n            ? buildLayoutProjectionTransformOrigin\n            : undefined);\n    }, render: renderSVG }));\n\nexport { svgVisualElement };\n","import { htmlVisualElement } from '../html/visual-element.js';\nimport { svgVisualElement } from '../svg/visual-element.js';\nimport { isSVGComponent } from './utils/is-svg-component.js';\n\nvar createDomVisualElement = function (Component, options) {\n    return isSVGComponent(Component)\n        ? svgVisualElement(options, { enableHardwareAcceleration: false })\n        : htmlVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { __assign } from 'tslib';\nimport { createMotionComponent } from '../../motion/index.js';\nimport { createMotionProxy } from './motion-proxy.js';\nimport { createDomMotionConfig } from './utils/create-config.js';\nimport { gestureAnimations } from '../../motion/features/gestures.js';\nimport { animations } from '../../motion/features/animations.js';\nimport { drag } from '../../motion/features/drag.js';\nimport { layoutAnimations } from '../../motion/features/layout/index.js';\nimport { createDomVisualElement } from './create-visual-element.js';\n\nvar featureBundle = __assign(__assign(__assign(__assign({}, animations), gestureAnimations), drag), layoutAnimations);\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nvar motion = /*@__PURE__*/ createMotionProxy(function (Component, config) {\n    return createDomMotionConfig(Component, config, featureBundle, createDomVisualElement);\n});\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n"],"sourceRoot":""}