{"version":3,"sources":["Assets/images/closeBTN01.svg","Component/Modals/become-creator.jsx"],"names":["CustomScrollbars","props","renderTrackVertical","className","renderThumbVertical","renderView","autoHide","style","children","BecomeCreator","onFormChange","event","target","name","checked","state","category","length","setState","value","filter","id","onFormSubmit","e","a","preventDefault","email","bio","instagram","website","twitter","userObj","portfolio","instagarm","url","isCreator","loading","updateUser","obj","services","put","then","response","status","Error","statusText","isOpen1","isOpen2","isOpen3","becomeCreator","errors","catch","localStorage","removeItem","toggle","index","collapse","prevState","clickHandler","nextButtonHandler","type","test","isOpen4","this","categories","getCategories","isProfile","isFooter","context","AvBTN02","onClick","defaultMessage","onChange","onSubmit","BlackWrap","WhiteBX02","CloseBTN","src","CloseBTN01","alt","BACLeft","BACLtitle","BACLdesc","BACLlist","to","BACRight","NFTForm","placeholder","CreateItemButton","autoHideTimeout","width","height","position","CustomCheckbox1","map","image","maxWidth","maxHeight","locale","categoryName","tu","en","disabled","WhiteBX01","TokenBox","WGTitle","getUserDetails","Component","contextType","Context","FlexDiv","styled","div","Media","xs","button","sm","md","connect","fetchCategory","dispatch","actions","fetchCategories"],"mappings":"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","file":"static/js/46.e30bf79b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/closeBTN01.bef0773d.svg\";","import styled from \"styled-components\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport CloseBTN01 from \"../../Assets/images/closeBTN01.svg\";\r\n\r\nimport { actions } from \"../../actions\";\r\nimport { Context } from \"../../Component/wrapper\";\r\nimport { services } from \"../../services\";\r\nimport Media from \"./../../Theme/media-breackpoint\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nfunction CustomScrollbars(props) {\r\n  return (\r\n    <Scrollbars\r\n      renderTrackVertical={(props) => (\r\n        <div {...props} className=\"track-vertical\" />\r\n      )}\r\n      renderThumbVertical={(props) => (\r\n        <div {...props} className=\"thumb-vertical\" />\r\n      )}\r\n      renderView={(props) => <div {...props} className=\"view\" />}\r\n      autoHide\r\n      style={props.style}\r\n    >\r\n      {props.children}\r\n    </Scrollbars>\r\n  );\r\n}\r\n\r\nclass BecomeCreator extends Component {\r\n  static contextType = Context;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen1: false,\r\n      isOpen2: false,\r\n      isOpen3: false,\r\n      isOpen4: false,\r\n      loading: false,\r\n      category: [],\r\n      becomeCreator: false,\r\n      errors: { name: false, email: false, bio: false, category: false },\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { categories } = this.props;\r\n    if (!categories) {\r\n      this.props.getCategories(); // fetch categories config\r\n    }\r\n  }\r\n\r\n  onFormChange = (event) => {\r\n    if (event.target.name === \"category\") {\r\n      if (event.target.checked && this.state.category.length < 2) {\r\n        this.setState({\r\n          category: [...this.state.category, event.target.value],\r\n        });\r\n      } else\r\n        this.setState({\r\n          category: this.state.category.filter(\r\n            (id) => id !== event.target.value\r\n          ),\r\n        });\r\n    } else this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { name, email, bio, instagram, website, category, twitter } =\r\n      this.state;\r\n    const userObj = {\r\n      name: name,\r\n      email: email,\r\n      bio: bio,\r\n      portfolio: {\r\n        instagarm: { url: instagram },\r\n        website: { url: website },\r\n        twitter: { url: twitter },\r\n      },\r\n      isCreator: true,\r\n      category: category,\r\n    };\r\n    this.setState({ loading: true }); // start loading\r\n    this.updateUser(userObj);\r\n  };\r\n\r\n  updateUser = async (obj) => {\r\n    this.setState({ loading: false }); // stop loading\r\n    const request = services.put(`user/update`, obj);\r\n    request\r\n      .then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        if (response.status === 200) {\r\n          this.setState({\r\n            isOpen1: false,\r\n            isOpen2: false,\r\n            isOpen3: false,\r\n            becomeCreator: true,\r\n            errors: { name: false, email: false, bio: false },\r\n            category: [],\r\n          });\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        if (e.response) {\r\n          if (e.response.status === 401 || e.response.status === 403) {\r\n            localStorage.removeItem(\"fibitAuthToken\");\r\n          }\r\n          // other error code (404, 500, etc): no need to log out\r\n        }\r\n      });\r\n  };\r\n\r\n  toggle = (index) => {\r\n    let collapse = \"isOpen\" + index;\r\n    this.setState((prevState) => ({ [collapse]: !prevState[collapse] }));\r\n  };\r\n\r\n  clickHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!this.state.becomeCreator) {\r\n      this.setState({ isOpen1: true });\r\n    }\r\n  };\r\n\r\n  nextButtonHandler = (type) => {\r\n    let { name, email, bio, category } = this.state;\r\n    if (type) {\r\n      let errors = {\r\n        ...this.state.errors,\r\n        name: false,\r\n        email: false,\r\n        bio: false,\r\n      };\r\n      if (!name) errors.name = true;\r\n      \r\n      if (!email) errors.email = true;\r\n      if (!bio) errors.bio = true;\r\n      if (!/.+@.+\\.[A-Za-z]+$/.test(email)) errors.email = true;\r\n      if (!/^[A-Za-z]+$/.test(name)) errors.name = false;\r\n      if (!errors.name && !errors.email && !errors.bio)\r\n        this.setState({ isOpen2: true });\r\n      this.setState({ errors: errors });\r\n    } else {\r\n      let errors = { ...this.state.errors, category: false };\r\n      if (category.length === 0) errors.category = true;\r\n      if (category.length !== 0) this.setState({ isOpen3: true });\r\n      this.setState({ errors: errors });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { categories } = this.props;\r\n    const {\r\n      isOpen1,\r\n      isOpen2,\r\n      isOpen3,\r\n      loading,\r\n      becomeCreator,\r\n      isOpen4,\r\n      errors,\r\n    } = this.state;\r\n\r\n    const { isProfile, isFooter } = this.props;\r\n    let context = this.context;\r\n    return (\r\n      <>\r\n        <AvBTN02\r\n          className={\r\n            becomeCreator\r\n              ? isFooter\r\n                ? ``\r\n                : `grayBTN`\r\n              : isProfile\r\n              ? `ani-1 borderBTN`\r\n              : ``\r\n          }\r\n          onClick={(e) => this.clickHandler(e)}\r\n        >\r\n          {!becomeCreator ? (\r\n            isProfile ? (\r\n              <FormattedMessage id=\"apply\" defaultMessage=\"Apply\" />\r\n            ) : (\r\n              <FormattedMessage\r\n                id=\"become_a_creator\"\r\n                defaultMessage=\"Become a Creator\"\r\n              />\r\n            )\r\n          ) : (\r\n            <FormattedMessage id=\"waitlist\" defaultMessage=\"Waitlist\" />\r\n          )}\r\n        </AvBTN02>\r\n\r\n        <form onChange={this.onFormChange} onSubmit={this.onFormSubmit}>\r\n          {isOpen1 ? (\r\n            <BlackWrap>\r\n              <WhiteBX02>\r\n                <CloseBTN\r\n                  className=\"ani-1\"\r\n                  onClick={() => {\r\n                    this.setState({ isOpen1: false });\r\n                  }}\r\n                >\r\n                  <img src={CloseBTN01} alt=\"\" />\r\n                </CloseBTN>\r\n\r\n                <BACLeft>\r\n                  <BACLtitle>\r\n                    <FormattedMessage\r\n                      id=\"who_are_you?\"\r\n                      defaultMessage=\"Who are you?\"\r\n                    />\r\n                  </BACLtitle>\r\n                  <BACLdesc>\r\n                    <FormattedMessage\r\n                      id=\"who_are_you_label\"\r\n                      defaultMessage=\"Tell us about yourself to join not able artists and creators\"\r\n                    />\r\n                  </BACLdesc>\r\n                  <BACLlist>\r\n                    <Link className=\"active\" to=\"/\">\r\n                      01\r\n                    </Link>\r\n                    <Link to=\"/\">02</Link>\r\n                    <Link to=\"/\">03</Link>\r\n                  </BACLlist>\r\n                </BACLeft>\r\n                <BACRight>\r\n                  <NFTForm>\r\n                    <div className=\"label-line\">\r\n                      <label>\r\n                        <FormattedMessage\r\n                          id=\"form_name\"\r\n                          defaultMessage=\"Name\"\r\n                        />\r\n                        <sup>*</sup>\r\n                      </label>\r\n                    </div>\r\n                    <FormattedMessage\r\n                      id=\"type_something\"\r\n                      defaultMessage=\"Type something…\"\r\n                    >\r\n                      {(placeholder) => (\r\n                        <input\r\n                          className={errors.name ? `error` : ``}\r\n                          type=\"text\"\r\n                          placeholder={placeholder}\r\n                          name=\"name\"\r\n                        />\r\n                      )}\r\n                    </FormattedMessage>\r\n                  </NFTForm>\r\n                  <NFTForm>\r\n                    <div className=\"label-line\">\r\n                      <label>\r\n                        <FormattedMessage\r\n                          id=\"form_email\"\r\n                          defaultMessage=\"Email\"\r\n                        />\r\n                        <sup>*</sup>\r\n                      </label>\r\n                    </div>\r\n                    <FormattedMessage\r\n                      id=\"type_something\"\r\n                      defaultMessage=\"Type something…\"\r\n                    >\r\n                      {(placeholder) => (\r\n                        <input\r\n                          className={errors.email ? `error` : ``}\r\n                          type=\"text\"\r\n                          placeholder={placeholder}\r\n                          name=\"email\"\r\n                        />\r\n                      )}\r\n                    </FormattedMessage>\r\n                  </NFTForm>\r\n                  <NFTForm>\r\n                    <div className=\"label-line\">\r\n                      <label>\r\n                        <FormattedMessage\r\n                          id=\"tell_about_us\"\r\n                          defaultMessage=\"Tell us about yourself\"\r\n                        />\r\n                        <sup>*</sup>\r\n                      </label>\r\n                    </div>\r\n                    <FormattedMessage\r\n                      id=\"type_something\"\r\n                      defaultMessage=\"Type something…\"\r\n                    >\r\n                      {(placeholder) => (\r\n                        <textarea\r\n                          placeholder={placeholder}\r\n                          className={errors.bio ? `error` : ``}\r\n                          name=\"bio\"\r\n                        ></textarea>\r\n                      )}\r\n                    </FormattedMessage>\r\n                  </NFTForm>\r\n                  <CreateItemButton>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        this.nextButtonHandler(true);\r\n                      }}\r\n                    >\r\n                      <FormattedMessage id=\"next\" defaultMessage=\"Next\" />\r\n                    </button>\r\n                  </CreateItemButton>\r\n                </BACRight>\r\n              </WhiteBX02>\r\n            </BlackWrap>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {isOpen2 ? (\r\n            <BlackWrap>\r\n              <WhiteBX02>\r\n                <CloseBTN\r\n                  className=\"ani-1\"\r\n                  onClick={() => {\r\n                    this.setState({ isOpen2: false, isOpen1: false });\r\n                  }}\r\n                >\r\n                  <img src={CloseBTN01} alt=\"\" />\r\n                </CloseBTN>\r\n\r\n                <BACLeft>\r\n                  <BACLtitle>\r\n                    <FormattedMessage\r\n                      id=\"whats_your_style?\"\r\n                      defaultMessage=\"What's your style?\"\r\n                    />\r\n                  </BACLtitle>\r\n                  <BACLdesc>\r\n                    <FormattedMessage\r\n                      id=\"whats_your_style_label\"\r\n                      defaultMessage=\"Your profile will be displayed under selected NFT categories if your creator status is approved\"\r\n                    />\r\n                  </BACLdesc>\r\n                  <BACLlist>\r\n                    <Link to=\"/\">01</Link>\r\n                    <Link className=\"active\" to=\"/\">\r\n                      02\r\n                    </Link>\r\n                    <Link to=\"/\">03</Link>\r\n                  </BACLlist>\r\n                </BACLeft>\r\n                <BACRight>\r\n                  <NFTForm>\r\n                    <div className=\"label-line\">\r\n                      <label>\r\n                        <FormattedMessage\r\n                          id=\"nft_category\"\r\n                          defaultMessage=\"NFT Category\"\r\n                        />\r\n                      </label>\r\n                      <p>\r\n                        <FormattedMessage\r\n                          id=\"nft_category_label\"\r\n                          defaultMessage=\"You can choose two categories at most\"\r\n                        />\r\n                      </p>\r\n                      {errors.category ? (\r\n                        <p className=\"error-text\">\r\n                          Please select at least one category\r\n                        </p>\r\n                      ) : (\r\n                        ``\r\n                      )}\r\n                    </div>\r\n                    <CustomScrollbars\r\n                      autoHide\r\n                      autoHideTimeout={1000}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"233px\",\r\n                        position: \"relative\",\r\n                      }}\r\n                    >\r\n                      <CustomCheckbox1>\r\n                        {categories\r\n                          ? categories.map((category, index) => {\r\n                              return (\r\n                                <label className=\"checkbox-container\">\r\n                                  <img\r\n                                    src={category.image}\r\n                                    alt=\"\"\r\n                                    style={{\r\n                                      maxWidth: \"32px\",\r\n                                      maxHeight: \"32px\",\r\n                                    }}\r\n                                  />\r\n                                  {context.locale === \"tr\"\r\n                                    ? category.categoryName.tu\r\n                                    : category.categoryName.en}\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"category\"\r\n                                    className=\"single-checkbox\"\r\n                                    value={category.id}\r\n                                    onChange={(event) => {\r\n                                      if (this.state.category.length > 1) {\r\n                                        event.target.checked = false;\r\n                                      }\r\n                                    }}\r\n                                  />\r\n                                  <span className=\"checkmark\"></span>\r\n                                </label>\r\n                              );\r\n                            })\r\n                          : \"\"}\r\n                      </CustomCheckbox1>\r\n                    </CustomScrollbars>\r\n                  </NFTForm>\r\n                  <CreateItemButton>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        this.setState({ isOpen1: true, isOpen2: false });\r\n                      }}\r\n                    >\r\n                      <FormattedMessage\r\n                        id=\"previous\"\r\n                        defaultMessage=\"Previous\"\r\n                      />\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        this.nextButtonHandler(false);\r\n                      }}\r\n                    >\r\n                      <FormattedMessage id=\"next\" defaultMessage=\"Next\" />\r\n                    </button>\r\n                  </CreateItemButton>\r\n                </BACRight>\r\n              </WhiteBX02>\r\n            </BlackWrap>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {isOpen3 ? (\r\n            <BlackWrap>\r\n              <WhiteBX02>\r\n                <CloseBTN\r\n                  className=\"ani-1\"\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      isOpen3: false,\r\n                      isOpen2: false,\r\n                      isOpen1: false,\r\n                    });\r\n                  }}\r\n                >\r\n                  <img src={CloseBTN01} alt=\"\" />\r\n                </CloseBTN>\r\n                <BACLeft>\r\n                  <BACLtitle>\r\n                    <FormattedMessage\r\n                      id=\"promote_yourself\"\r\n                      defaultMessage=\"Promote yourself!\"\r\n                    />\r\n                  </BACLtitle>\r\n                  <BACLdesc>\r\n                    <FormattedMessage\r\n                      id=\"promote_yourself_lable\"\r\n                      defaultMessage=\"Let us know about your portfolio and social links, which will drastically increase your chance of becoming a creator.\"\r\n                    />\r\n                  </BACLdesc>\r\n                  <BACLlist>\r\n                    <Link to=\"/\">01</Link>\r\n                    <Link to=\"/\">02</Link>\r\n                    <Link className=\"active\" to=\"/\">\r\n                      03\r\n                    </Link>\r\n                  </BACLlist>\r\n                </BACLeft>\r\n                <BACRight>\r\n                  <NFTForm>\r\n                    <div className=\"label-line\">\r\n                      <label>\r\n                        <FormattedMessage\r\n                          id=\"portfolio_website\"\r\n                          defaultMessage=\"Portfolio website\"\r\n                        />\r\n                      </label>\r\n                    </div>\r\n                    <FormattedMessage\r\n                      id=\"type_something\"\r\n                      defaultMessage=\"Type something…\"\r\n                    >\r\n                      {(placeholder) => (\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"website\"\r\n                          placeholder={placeholder}\r\n                        />\r\n                      )}\r\n                    </FormattedMessage>\r\n                  </NFTForm>\r\n                  <NFTForm>\r\n                    <div className=\"label-line\">\r\n                      <label>\r\n                        <FormattedMessage\r\n                          id=\"instagram_account\"\r\n                          defaultMessage=\"Instagram account\"\r\n                        />\r\n                      </label>\r\n                    </div>\r\n                    <FormattedMessage\r\n                      id=\"type_something\"\r\n                      defaultMessage=\"Type something…\"\r\n                    >\r\n                      {(placeholder) => (\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"instagram\"\r\n                          placeholder={placeholder}\r\n                        />\r\n                      )}\r\n                    </FormattedMessage>\r\n                  </NFTForm>\r\n                  <NFTForm>\r\n                    <div className=\"label-line\">\r\n                      <label>\r\n                        <FormattedMessage\r\n                          id=\"twitter_account\"\r\n                          defaultMessage=\"Twitter account\"\r\n                        />\r\n                      </label>\r\n                    </div>\r\n                    <FormattedMessage\r\n                      id=\"type_something\"\r\n                      defaultMessage=\"Type something…\"\r\n                    >\r\n                      {(placeholder) => (\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"twitter\"\r\n                          placeholder={placeholder}\r\n                        />\r\n                      )}\r\n                    </FormattedMessage>\r\n                  </NFTForm>\r\n                  <CreateItemButton>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        this.setState({ isOpen2: true, isOpen3: false });\r\n                      }}\r\n                    >\r\n                      <FormattedMessage\r\n                        id=\"previous\"\r\n                        defaultMessage=\"Previous\"\r\n                      />\r\n                    </button>\r\n                    <button type=\"submit\" disabled={loading}>\r\n                      {loading ? (\r\n                        \"loading..\"\r\n                      ) : (\r\n                        <FormattedMessage id=\"submit\" defaultMessage=\"Submit\" />\r\n                      )}\r\n                    </button>\r\n                  </CreateItemButton>\r\n                </BACRight>\r\n              </WhiteBX02>\r\n            </BlackWrap>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </form>\r\n\r\n        {!isOpen4 && becomeCreator ? (\r\n          <>\r\n            <BlackWrap>\r\n              <WhiteBX01>\r\n                <CloseBTN className=\"ani-1\" onClick={() => this.toggle(4)}>\r\n                  {\" \"}\r\n                  <img src={CloseBTN01} alt=\"\" />{\" \"}\r\n                </CloseBTN>\r\n\r\n                <TokenBox>\r\n                  <WGTitle>\r\n                    <FormattedMessage\r\n                      id=\"we_got_submission\"\r\n                      defaultMessage=\"We got your Submission!\"\r\n                    />\r\n                  </WGTitle>\r\n                  <p>\r\n                    <FormattedMessage\r\n                      id=\"submission_label_1\"\r\n                      defaultMessage=\"Result of your application will be delivered over email. Applications are handled in badges, so it can take some time to go over yours. Thanks for your patience.\"\r\n                    />\r\n                  </p>\r\n                  <p>\r\n                    <FormattedMessage\r\n                      id=\"submission_label_2\"\r\n                      defaultMessage=\"If you have a concern about your form being submitted correctly, you can contact us.\"\r\n                    />\r\n                  </p>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.getUserDetails(); //update the user details\r\n                      this.toggle(4);\r\n                    }}\r\n                  >\r\n                    <FormattedMessage id=\"ok\" defaultMessage=\"OK\" />\r\n                  </button>\r\n                </TokenBox>\r\n              </WhiteBX01>\r\n            </BlackWrap>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst FlexDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n`;\r\nconst BlackWrap = styled(FlexDiv)`\r\n  position: fixed;\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  z-index: 1011;\r\n  backdrop-filter: blur(2px);\r\n`;\r\nconst WhiteBX01 = styled(FlexDiv)`\r\n  width: 100%;\r\n  position: relative;\r\n  max-width: 400px;\r\n  margin: 0 15px;\r\n  min-height: 418px;\r\n  padding: 50px;\r\n  background-color: #fff;\r\n  border-radius: 30px;\r\n  justify-content: flex-start;\r\n  align-content: center;\r\n  ${Media.xs} {\r\n    padding: 50px 25px;\r\n  }\r\n`;\r\nconst CloseBTN = styled.button`\r\n  width: 20px !important;\r\n  height: 20px !important;\r\n  position: absolute;\r\n  right: 20px;\r\n  top: 27px;\r\n  padding: 0;\r\n  margin: 0px;\r\n  z-index: 9;\r\n  :hover {\r\n    transform: rotate(90deg);\r\n  }\r\n\r\n  ${Media.xs} {\r\n    right: 15px;\r\n    top: 15px;\r\n  }\r\n`;\r\nconst TokenBox = styled(FlexDiv)`\r\n  justify-content: center;\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  button {\r\n    height: 100%;\r\n    width: 60%;\r\n    color: #000000;\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    letter-spacing: -0.5px;\r\n    padding: 13px 35px;\r\n    border-radius: 15px;\r\n    border: 1px solid #000000;\r\n    :hover {\r\n      background-color: #000;\r\n      color: #fff;\r\n    }\r\n  }\r\n`;\r\nconst TokenLeft = styled.div`\r\n  p {\r\n    color: #000000;\r\n    font-size: 16px;\r\n    letter-spacing: -0.8px;\r\n    font-weight: 600;\r\n    margin: 0px;\r\n    &.small {\r\n      color: rgb(0 0 0 / 23%);\r\n      margin: 0px;\r\n      font-size: 12px;\r\n      letter-spacing: -0.6px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst WhiteBX02 = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  max-width: 720px;\r\n  margin: 0 15px;\r\n  min-height: 518px;\r\n  background-color: #fff;\r\n  border-radius: 30px;\r\n  display: flex;\r\n  ${Media.sm} {\r\n    display: block;\r\n    max-height: 500px;\r\n    overflow-y: auto;\r\n  }\r\n`;\r\n\r\nconst BACLeft = styled.div`\r\n  background-color: #eef2f7;\r\n  padding: 60px 50px;\r\n  max-width: 320px;\r\n  width: 100%;\r\n  border-top-left-radius: 30px;\r\n  border-bottom-left-radius: 30px;\r\n  ${Media.md} {\r\n    text-align: left;\r\n  }\r\n  ${Media.sm} {\r\n    max-width: 100%;\r\n    border-top-right-radius: 30px;\r\n    border-bottom-left-radius: 0px;\r\n    padding: 60px 25px 40px;\r\n  }\r\n`;\r\n\r\nconst BACLtitle = styled.div`\r\n  color: #000;\r\n  font-size: 22px;\r\n  letter-spacing: -0.55px;\r\n  margin: 0px 0px 15px;\r\n  font-weight: bold;\r\n  ${Media.sm} {\r\n    font-size: 24px;\r\n  }\r\n`;\r\n\r\nconst BACLdesc = styled.div`\r\n  color: #000;\r\n  font-size: 16px;\r\n  letter-spacing: -0.8px;\r\n  margin: 0px 0px 30px;\r\n  ${Media.sm} {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst BACLlist = styled.div`\r\n  a {\r\n    color: rgb(0 0 0 / 20%) !important;\r\n    font-size: 12px !important;\r\n    font-weight: bold;\r\n    letter-spacing: -0.6px !important;\r\n    margin: 0px 20px 0px 0px !important;\r\n    &.active {\r\n      color: rgb(0 0 0 / 100%) !important;\r\n    }\r\n    ${Media.md} {\r\n      padding: 0px !important;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BACRight = styled.div`\r\n  padding: 60px 50px;\r\n  width: 100%;\r\n  position: relative;\r\n  ${Media.md} {\r\n    text-align: left;\r\n  }\r\n  ${Media.sm} {\r\n    padding: 40px 25px;\r\n  }\r\n`;\r\n\r\nconst NFTForm = styled.div`\r\n  position: relative;\r\n  // .view{\r\n  //   width:100%;\r\n  // }\r\n  .label-line {\r\n    margin: 0px 0px 6px;\r\n    label {\r\n      font-size: 12px;\r\n      color: #8e9194;\r\n      font-weight: 600;\r\n    }\r\n    sup {\r\n      top: -0.1em;\r\n    }\r\n    p {\r\n      color: #8e9194;\r\n      font-size: 12px;\r\n      letter-spacing: -0.4px;\r\n      font-weight: 300;\r\n      margin: 0px;\r\n    }\r\n    p.error-text {\r\n      color: #ff2a44;\r\n      font-size: 12px;\r\n      font-weight: 500;\r\n      margin: 0px;\r\n    }\r\n  }\r\n  input {\r\n    width: 100%;\r\n    height: 54px;\r\n    border: 1px solid #dddddd;\r\n    border-radius: 10px;\r\n    padding: 15px;\r\n    font-size: 16px;\r\n    color: #000000;\r\n    letter-spacing: -0.9px;\r\n    margin: 0px 0px 15px;\r\n    ::placeholder {\r\n      color: #000;\r\n      opacity: 20%;\r\n    }\r\n  }\r\n  .error {\r\n    border: 1px solid #ff2a44;\r\n  }\r\n  textarea {\r\n    width: 100%;\r\n    min-height: 109px;\r\n    line-height: 24px;\r\n    resize: none;\r\n    border: 1px solid #dddddd;\r\n    border-radius: 10px;\r\n    padding: 15px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    letter-spacing: -0.8px;\r\n    margin: 0px 0px 15px;\r\n  }\r\n  .errorinput {\r\n    position: relative;\r\n    input {\r\n      border-color: #ff2a44;\r\n    }\r\n    p.error {\r\n      color: #ff2a44;\r\n      font-size: 12px;\r\n      letter-spacing: -0.6px;\r\n      font-weight: 600;\r\n      margin: 0px;\r\n      position: absolute;\r\n      top: 18px;\r\n      right: 15px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CreateItemButton = styled.div`\r\n  margin: 0px;\r\n  position: absolute;\r\n  right: 50px;\r\n  left: auto;\r\n  bottom: 60px;\r\n  button {\r\n    font-size: 14px;\r\n    color: #000;\r\n    letter-spacing: -0.5px;\r\n    width: 100px !important;\r\n    height: 44px !important;\r\n    margin: 0px 0px 0px 5px;\r\n    cursor: pointer;\r\n    border-radius: 15px;\r\n    border: 1px solid #000;\r\n    :hover {\r\n      background: linear-gradient(130.35deg, #00dbae 17.35%, #05755e 78.23%);\r\n      color: #fff;\r\n      border: none;\r\n    }\r\n  }\r\n  ${Media.sm} {\r\n    position: initial;\r\n    margin: 20px auto 0px;\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nconst CustomCheckbox1 = styled(FlexDiv)`\r\n  justify-content: flex-start;\r\n  // margin-bottom: 30px;\r\n  .checkbox-container {\r\n    display: flex;\r\n    align-items: center;\r\n    position: relative;\r\n    height: 54px;\r\n    width: 100%;\r\n    margin: 0px 0px 5px 0px;\r\n    cursor: pointer;\r\n    padding-left: 15px;\r\n    line-height: 54px;\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    letter-spacing: -0.8px;\r\n    color: #000;\r\n    img {\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n  .checkbox-container input {\r\n    position: absolute;\r\n    left: 0;\r\n    opacity: 0;\r\n    cursor: pointer;\r\n    margin: 0px;\r\n  }\r\n  .checkmark {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 54px;\r\n    width: 100%;\r\n    background-color: transparent;\r\n    border-radius: 10px;\r\n    border: 1px solid #dddddd;\r\n  }\r\n  .checkbox-container input:checked ~ .checkmark {\r\n    border: 1px solid #00DBAE;\r\n  }\r\n`;\r\n\r\nconst AvBTN02 = styled.button`\r\n  padding: 11px 23px;\r\n  font-size: 12px;\r\n  color: #fff;\r\n  background-color: #000;\r\n  border-radius: 15px;\r\n  ${Media.xs} {\r\n    padding: 9px 15px;\r\n  }\r\n  :hover {\r\n    background-color: #00DBAE;\r\n    -webkit-box-shadow: 1px 8px 10px 1px rgba(0, 0, 0, 0.08);\r\n    box-shadow: 1px 8px 10px 1px rgba(0, 0, 0, 0.08);\r\n  }\r\n  &.grayBTN {\r\n    background-color: #b2b2b2;\r\n    :hover {\r\n      background-color: #878787;\r\n    }\r\n  }\r\n  &.colorBTN {\r\n    background: #00DBAE;\r\n    background: -moz-linear-gradient(left, #d121d6 0%, #febf11 100%);\r\n    background: -webkit-linear-gradient(left, #d121d6 0%, #febf11 100%);\r\n    background: linear-gradient(130.35deg, #00dbae 17.35%, #05755e 78.23%);\r\n    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#d121d6', endColorstr='#febf11',GradientType=1 );\r\n    color: #fff;\r\n    :hover {\r\n      filter: brightness(0.9);\r\n    }\r\n  }\r\n  &.borderBTN {\r\n    padding: 13px 44px;\r\n    font-size: 14px;\r\n    color: #000;\r\n    background-color: #fff;\r\n    border: 1px solid #000;\r\n    letter-spacing: -0.5px;\r\n    border-radius: 15px;\r\n    :hover {\r\n      background-color: #00DBAE;\r\n      color: #fff;\r\n      -webkit-box-shadow: 1px 8px 10px 1px rgba(0, 0, 0, 0.08);\r\n      box-shadow: 1px 8px 10px 1px rgba(0, 0, 0, 0.08);\r\n    }\r\n  }\r\n`;\r\n\r\nconst OnbTitle01 = styled.div`\r\n  font-size: 26px;\r\n  font-weight: 600;\r\n  color: #000;\r\n  margin-bottom: 15px;\r\n\r\n  &.v2 {\r\n    max-width: 220px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    line-height: 28px;\r\n  }\r\n`;\r\nconst WGTitle = styled.div`\r\n  color: #000000;\r\n  font-size: 24px;\r\n  line-height: 28px;\r\n  font-weight: 700;\r\n  letter-spacing: -0.6px;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  width: 100%;\r\n`;\r\nconst WGdescText = styled.div`\r\n  color: #000000;\r\n  font-size: 14px;\r\n  letter-spacing: -0.7px;\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n`;\r\n\r\nconst mapDipatchToProps = (dispatch) => {\r\n  return {\r\n    getCategories: () => dispatch(actions.fetchCategories()),\r\n    getUserDetails: () => dispatch(actions.getUserDetails()),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    categories: state.fetchCategory,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDipatchToProps)(BecomeCreator);\r\n"],"sourceRoot":""}