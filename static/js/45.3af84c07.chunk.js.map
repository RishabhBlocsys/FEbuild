{"version":3,"sources":["Component/home/banner.jsx","Assets/images/banner-larrow.svg","Assets/images/banner-rarrow.svg"],"names":["responsive","desktop","breakpoint","max","min","items","slidesToSlide","tablet","mobile","CustomDot","onClick","rest","index","onMove","active","carouselState","currentSlide","deviceType","className","React","Children","toArray","BannerTab","props","setCookie","banners","oneHour","Date","setHours","getHours","Number","expiryTime","localStorage","setItem","JSON","stringify","getCookie","getItem","bannersObj","parse","stamp","cookies","state","loading","a","this","setBanners","getBanners","banner","img","mob_img","context","locale","tu","en","to","url","initial","opacity","animate","transition","delay","src","exit","HomeBanner","showDots","infinite","customDot","map","renderedBanner","Component","contextType","Context","styled","div","Media","md","xs","LArrow","RArrow","sm","withCookies","connect","fetchDashboardBanners","dispatch","actions","fetchBanners","data","type"],"mappings":"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","file":"static/js/45.3af84c07.chunk.js","sourcesContent":["import 'react-multi-carousel/lib/styles.css';\nimport 'react-tabs/style/react-tabs.css';\nimport React, { Component } from 'react';\nimport Carousel from 'react-multi-carousel';\nimport { connect } from 'react-redux';\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\nimport { HashLink as Link } from \"react-router-hash-link\";\nimport styled from 'styled-components';\nimport LazyLoad from \"react-lazyload\";\nimport { motion } from \"framer-motion\";\nimport Media from \"../../Theme/media-breackpoint\";\n\nimport LArrow from '../../Assets/images/banner-larrow.svg';\nimport RArrow from '../../Assets/images/banner-rarrow.svg';\n\nimport { actions } from '../../actions';\nimport { Context } from '../wrapper';\nimport { expiryTime } from '../../config';\n\n\nconst responsive = {\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 1,\n    slidesToSlide: 1, // optional, default to 1.\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 1,\n    slidesToSlide: 1, // optional, default to 1.\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 1,\n    slidesToSlide: 1, // optional, default to 1.\n  },\n};\n\nconst CustomDot = ({ onClick, ...rest }) => {\n  const {\n    onMove,\n    index,\n    active,\n    carouselState: { currentSlide, deviceType },\n  } = rest;\n  const carouselItems = [1, 2, 3, 4, 5, 6];\n  return (\n    <button\n      className={active ? 'active' : 'inactive'}\n      onClick={() => onClick()}\n    >\n      {React.Children.toArray(carouselItems)[index]}\n    </button>\n  );\n};\n\nclass BannerTab extends Component {\n\n  static contextType = Context;\n  static propTypes = {\n    cookies: instanceOf(Cookies).isRequired\n  }\n\n  constructor(props) {\n    super(props);\n    const { cookies } = props;\n    this.state = {\n      loading: false,\n      banners: this.getCookie() || null,\n    }\n  }\n\n  async componentDidMount() {\n    const { banners } = this.props\n    if (!this.state.banners && !banners) {\n      this.props.getBanners() // fetch banner list\n    } else {\n      this.props.setBanners(this.getCookie())\n    }\n  }\n\n  componentDidUpdate() {\n    const { banners } = this.props\n    if (banners && !this.getCookie()) {\n      this.setCookie(banners) // set banners in cookie\n    }\n  }\n\n  renderedBanner(banner, index) {\n    let context = this.context;\n    let img = ''\n    let mob_img = ''\n    if (context.locale === 'tr') {\n      img = banner.banner.tu\n      mob_img = banner.mobile.tu\n    } else {\n      img = banner.banner.en\n      mob_img = banner.mobile.en\n    }\n    return (\n      <div className='item' key={index}>\n        <Link to={banner.url}>\n          <motion.img\n            initial={{ opacity: 0.2 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.4 }}\n            key={index}\n            src={img}\n            exit={{ opacity: 0 }}\n            className=\"desktop-img\"\n          />\n          <motion.img\n            initial={{ opacity: 0.2 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.4 }}\n            key={index}\n            src={mob_img}\n            exit={{ opacity: 0 }}\n            className=\"mobile-img\"\n          />\n        </Link>\n      </div >\n    )\n  }\n\n  setCookie = (banners) => {\n    let oneHour = new Date()\n    oneHour.setHours(oneHour.getHours() + Number(expiryTime)); //two hour from now\n    // oneHour.setMinutes(oneHour.getMinutes() + 1); //one minute from now\n    localStorage.setItem('banners', JSON.stringify({ 'banners': banners, 'stamp': oneHour }))\n  }\n\n  getCookie = () => {\n    let banners = localStorage.getItem('banners')\n    let bannersObj = JSON.parse(banners)\n    if (bannersObj && (new Date(bannersObj.stamp) < new Date())) {\n      return false\n    } else if (bannersObj) {\n      return bannersObj.banners\n    } else {\n      return null\n    }\n  }\n\n  render() {\n    return (\n      <LazyLoad>\n        <HomeBanner>\n          {this.props.banners ?\n            <Carousel responsive={responsive} showDots infinite={true} customDot={<CustomDot />}>\n              {this.props.banners.map((banner, index) => this.renderedBanner(banner, index))}\n            </Carousel>\n            : 'loading..'}\n        </HomeBanner>\n      </LazyLoad>\n    );\n  }\n}\n\n\nconst FlexDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nconst HomeBanner = styled.div`\n  min-height: calc(100vh - 100px);\n  width: 100%;\n  overflow:hidden;\n  ${Media.md}{\n    min-height:auto;\n    margin-top:80px;\n  }\n  // ${Media.xs}{\n  //   max-height: 550px;\n  // }\n  .item {\n    img {\n      width: 100%;\n      height:100%;\n      object-fit:cover;\n      min-height: 100vh;\n      // margin-top:100px;\n      &.desktop-img\n      {\n        ${Media.xs}{\n          display:none;\n        }\n      }\n      &.mobile-img\n      { display:none;\n        ${Media.xs}{\n          display:block;\n        }\n      }\n      ${Media.md}{\n        min-height:auto;\n        margin-top:0px;\n      }\n    }\n  }\n  .react-multi-carousel-track\n  {\n    height: 100vh;\n    ${Media.md}{\n      height:auto;\n    }\n    // ${Media.xs}{\n    //   max-height: 550px;\n    // }\n  }\n  .react-multiple-carousel__arrow {\n    background: transparent;\n    min-width: 20px;\n    min-height: 20px;\n    padding: 0px;\n    border-radius: 0px;\n    z-index:1;\n    :hover {\n      background: transparent;\n    }\n  }\n  .react-multiple-carousel__arrow--left::before {\n    background: url(${LArrow}) no-repeat;\n    color: transparent;\n  }\n  .react-multiple-carousel__arrow--right::before {\n    background: url(${RArrow}) no-repeat;\n    color: transparent;\n  }\n  .react-multiple-carousel__arrow--left {\n    left: calc(50% - 140px);\n    bottom: 33px;\n  }\n  .react-multiple-carousel__arrow--right {\n    right: calc(50% - 140px);\n    bottom: 33px;\n  }\n  .react-multi-carousel-dot-list {\n    background-color: rgba(255, 255, 255, 0.85);\n    width: 320px;\n    height: 52px;\n    border-radius: 20px;\n    margin: 0 auto 20px;\n    button {\n      position: relative;\n      margin: 0px 10px;\n      padding: 0px 0px 0px 10px;\n      font-size: 14px;\n      color: rgb(0 0 0 / 20%);\n      &.active {\n        color: #000;\n      }\n      :before {\n        content: '0';\n        position: absolute;\n        left: 0px;\n      }\n    }\n    ${Media.sm}{\n      width:300px;\n    }\n  }\n`;\n\nconst mapDipatchToProps = (dispatch) => {\n  return {\n    getBanners: () => dispatch(actions.fetchBanners()),\n    setBanners: (data) => dispatch({ type: 'FETCHED_NFT_BANNERS', data: data })\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    banners: state.fetchDashboardBanners,\n  }\n}\n\nexport default withCookies(connect(mapStateToProps, mapDipatchToProps)(BannerTab));","export default __webpack_public_path__ + \"static/media/banner-larrow.e28db673.svg\";","export default __webpack_public_path__ + \"static/media/banner-rarrow.733c2133.svg\";"],"sourceRoot":""}